import{a as b}from"./chunk-4SALBWPR.js";import{c as S}from"./chunk-ZJYJPMQY.js";import{Z as h,ba as p,f,g as v,ga as g}from"./chunk-OYRL5FJJ.js";import{a as c,b as n,i}from"./chunk-ODN5LVDJ.js";var C=(()=>{class l{constructor(r,e){this.supabase=r,this.authService=e,this.actividadesSubject=new v([]),this.actividades$=this.actividadesSubject.asObservable().pipe(h(t=>{console.log("\u{1F4E1} [ActividadesService] Emitiendo actividades:",{count:t.length,data:t})})),this.frentesSubject=new v([]),this.frentes$=this.frentesSubject.asObservable().pipe(h(t=>{console.log("\u{1F4E1} [ActividadesService] Emitiendo frentes:",{count:t.length,data:t})})),this.progresoUpdatedSubject=new f,this.progresoUpdated$=this.progresoUpdatedSubject.asObservable(),this.actividadesChannel=null,this.frentesChannel=null,console.log("\u{1F3D7}\uFE0F [ActividadesService] Constructor iniciado"),this.authService.currentUser$.subscribe({next:t=>{console.log("\u{1F464} [ActividadesService] Estado de autenticaci\xF3n cambi\xF3:",{authenticated:!!t,userId:t?.id,email:t?.email}),t?(console.log("\u2705 [ActividadesService] Usuario autenticado, cargando datos..."),this.loadUserActividades().catch(a=>{console.error("\u274C [ActividadesService] Error cargando actividades:",a)}),this.loadUserFrente().catch(a=>{console.error("\u274C [ActividadesService] Error cargando frentes:",a)}),this.setupRealtimeSubscriptions()):(console.log("\u274C [ActividadesService] Usuario no autenticado, limpiando datos"),this.actividadesSubject.next([]),this.frentesSubject.next([]),this.cleanupRealtimeSubscriptions())},error:t=>{console.error("\u274C [ActividadesService] Error en suscripci\xF3n de autenticaci\xF3n:",t)}})}ngOnDestroy(){this.cleanupRealtimeSubscriptions()}setupRealtimeSubscriptions(){if(console.log("\u{1F504} [ActividadesService] Configurando suscripciones en tiempo real"),this.cleanupRealtimeSubscriptions(),!this.authService.getCurrentUser()){console.log("\u274C [ActividadesService] No hay usuario para configurar suscripciones");return}this.actividadesChannel=this.supabase.client.channel("actividades-changes").on("postgres_changes",{event:"*",schema:"public",table:"actividades"},e=>{console.log("\u{1F504} [ActividadesService] Cambio en actividades:",e),this.handleActividadChange(e)}).subscribe(),this.frentesChannel=this.supabase.client.channel("frentes-changes").on("postgres_changes",{event:"*",schema:"public",table:"frentes"},e=>{console.log("\u{1F504} [ActividadesService] Cambio en frentes:",e),this.handleFrenteChange(e)}).subscribe(),console.log("\u2705 [ActividadesService] Suscripciones en tiempo real configuradas")}cleanupRealtimeSubscriptions(){console.log("\u{1F9F9} [ActividadesService] Limpiando suscripciones en tiempo real"),this.actividadesChannel&&(this.supabase.client.removeChannel(this.actividadesChannel),this.actividadesChannel=null),this.frentesChannel&&(this.supabase.client.removeChannel(this.frentesChannel),this.frentesChannel=null)}handleActividadChange(r){return i(this,null,function*(){let e=this.authService.getCurrentUser();if(!e)return;console.log("\u{1F504} [ActividadesService] Procesando cambio en actividad:",r.eventType),(yield this.isActividadRelevantForUser(r,e.id))?(console.log("\u2705 [ActividadesService] Cambio relevante, recargando actividades"),yield this.loadUserActividades()):console.log("\u23ED\uFE0F [ActividadesService] Cambio no relevante para el usuario actual")})}handleFrenteChange(r){return i(this,null,function*(){let e=this.authService.getCurrentUser();if(!e)return;console.log("\u{1F504} [ActividadesService] Procesando cambio en frente:",r.eventType),(yield this.isFrenteRelevantForUser(r,e.id))?(console.log("\u2705 [ActividadesService] Cambio relevante, recargando frentes"),yield this.loadUserFrente()):console.log("\u23ED\uFE0F [ActividadesService] Cambio no relevante para el usuario actual")})}isActividadRelevantForUser(r,e){return i(this,null,function*(){try{return!!(r.new||r.old)}catch(t){return console.error("Error verificando relevancia de actividad:",t),!1}})}isFrenteRelevantForUser(r,e){return i(this,null,function*(){try{return!!(r.new||r.old)}catch(t){return console.error("Error verificando relevancia del frente:",t),!1}})}loadUserActividades(){return i(this,null,function*(){console.log("\u{1F680} [SERVICE] ===== INICIANDO loadUserActividades =====");try{console.log("\u{1F50D} [SERVICE] Verificando usuario autenticado...");let r=this.authService.getCurrentUser();if(console.log("\u{1F464} [SERVICE] Usuario obtenido:",r),!r){console.log("\u274C [SERVICE] No hay usuario autenticado para cargar actividades"),console.log("\u{1F50D} [SERVICE] AuthService estado:",this.authService);return}console.log("\u{1F50D} [DEBUG] Usuario actual:",{id:r.id,email:r.email,rol:this.authService.getCurrentProfile()?.rol}),console.log("\u{1F517} [DEBUG] Estado de conexi\xF3n Supabase:",{client:!!this.supabase.client,connected:this.supabase.client?"Conectado":"Desconectado"});let e,t;console.log("\u{1F465} [DEBUG] Cargando todas las actividades para usuario:",this.authService.isResident()?"residente":"log\xEDstica"),console.log("\u{1F4E1} [DEBUG] Ejecutando consulta a Supabase..."),console.log("\u{1F50D} [DEBUG] Probando consulta simple sin joins...");let a=yield this.supabase.client.from("actividades").select("*").limit(10);console.log("\u{1F4CA} [DEBUG] Resultado consulta simple:",a),console.log("\u{1F4CA} [DEBUG] Datos simples:",a.data),console.log("\u{1F4CA} [DEBUG] Error simple:",a.error),console.log("\u{1F4CA} [DEBUG] Count simple:",a.data?.length||0),console.log("\u{1F4E1} [DEBUG] Ejecutando consulta completa con joins...");let o=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).order("created_at",{ascending:!1});if(console.log("\u{1F4CA} [DEBUG] Resultado completo de actividades:",o),console.log("\u{1F4CA} [DEBUG] Datos:",o.data),console.log("\u{1F4CA} [DEBUG] Error:",o.error),console.log("\u{1F4CA} [DEBUG] Status:",o.status),console.log("\u{1F4CA} [DEBUG] StatusText:",o.statusText),a.data&&a.data.length>0&&(!o.data||o.data.length===0)?(console.log("\u26A0\uFE0F [DEBUG] La consulta simple tiene datos pero la completa no. Usando datos simples."),e=a.data,t=a.error):(e=o.data,t=o.error),t)throw console.error("\u274C [DEBUG] Error en consulta Supabase:",t),t;console.log("\u{1F50D} [ActividadesService] Datos recibidos de Supabase:",e),console.log("\u{1F50D} [ActividadesService] Tipo de datos:",typeof e),console.log("\u{1F50D} [ActividadesService] Es array:",Array.isArray(e)),console.log("\u{1F50D} [ActividadesService] Longitud:",e?.length||0),e&&e.length>0?(console.log("\u{1F50D} [ActividadesService] Primera actividad:",e[0]),console.log("\u{1F50D} [ActividadesService] ID de primera actividad:",e[0].id),console.log("\u{1F50D} [ActividadesService] Claves de primera actividad:",Object.keys(e[0]))):console.log("\u26A0\uFE0F [ActividadesService] No se encontraron actividades en la base de datos"),console.log("\u{1F4E4} [DEBUG] Enviando datos al BehaviorSubject..."),this.actividadesSubject.next(e||[]),console.log("\u2705 [DEBUG] Datos enviados al BehaviorSubject");let s=this.actividadesSubject.value;console.log("\u{1F50D} [DEBUG] Valor actual del BehaviorSubject:",s),console.log("\u{1F50D} [DEBUG] Longitud del BehaviorSubject:",s.length)}catch(r){console.error("\u274C [DEBUG] Error completo en loadUserActividades:",r),console.error("\u274C [DEBUG] Stack trace:",r?.stack||"No stack trace available")}})}reloadUserFrente(){return i(this,null,function*(){yield this.loadUserFrente()})}loadUserFrente(){return i(this,null,function*(){try{let r=this.authService.getCurrentUser();if(!r){console.log("No hay usuario autenticado para cargar frentes");return}console.log("Cargando frentes para usuario:",r.email);let{data:e,error:t}=yield this.supabase.client.from("frentes").select("*").eq("estado","activo").order("nombre");if(t)throw console.error("Error obteniendo frentes:",t),t;console.log("Frentes encontrados:",e),this.frentesSubject.next(e||[])}catch(r){console.error("Error loading frentes:",r)}})}createActividad(r){return i(this,null,function*(){try{let e=this.authService.getCurrentUser();if(!e)throw new Error("Usuario no autenticado");let t=n(c({},r),{user_id:e.id,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),{data:a,error:o}=yield this.supabase.client.from("actividades").insert([t]).select(`
          *,
          frente:frentes(*)
        `).single();if(o)throw o;return yield this.loadUserActividades(),a}catch(e){throw console.error("Error creating actividad:",e),e}})}updateActividad(r,e){return i(this,null,function*(){try{let t=n(c({},e),{updated_at:new Date().toISOString()}),{data:a,error:o}=yield this.supabase.client.from("actividades").update(t).eq("id",r).select(`
          *,
          frente:frentes(*)
        `).single();if(o)throw o;return yield this.loadUserActividades(),a}catch(t){throw console.error("Error updating actividad:",t),t}})}deleteActividad(r){return i(this,null,function*(){try{if(console.log("\u{1F5D1}\uFE0F [ActividadesService] Intentando eliminar actividad con ID:",r),console.log("\u{1F5D1}\uFE0F [ActividadesService] Tipo de ID:",typeof r),console.log("\u{1F5D1}\uFE0F [ActividadesService] Valor del ID:",JSON.stringify(r)),!/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(r))throw console.error("\u274C [ActividadesService] ID no es un UUID v\xE1lido:",r),new Error(`ID no es un UUID v\xE1lido: ${r}`);let{error:t}=yield this.supabase.client.from("actividades").delete().eq("id",r);if(t)throw console.error("\u274C [ActividadesService] Error de Supabase al eliminar:",t),t;console.log("\u2705 [ActividadesService] Actividad eliminada exitosamente"),yield this.loadUserActividades()}catch(e){throw console.error("\u274C [ActividadesService] Error deleting actividad:",e),e}})}getActividadById(r){return i(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).eq("id",r).single();if(t)throw t;return e}catch(e){return console.error("Error getting actividad:",e),null}})}addEvidencia(r){return i(this,null,function*(){try{let e=n(c({},r),{created_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("evidencias").insert([e]).select().single();if(a)throw a;return yield this.loadUserActividades(),t}catch(e){throw console.error("Error adding evidencia:",e),e}})}addRecurso(r){return i(this,null,function*(){try{let e=n(c({},r),{created_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("recursos").insert([e]).select().single();if(a)throw a;return yield this.loadUserActividades(),t}catch(e){throw console.error("Error adding recurso:",e),e}})}getActividadesByFrente(r){return i(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).eq("frente_id",r).order("fecha",{ascending:!1});if(t)throw t;return e||[]}catch(e){return console.error("Error getting actividades by frente:",e),[]}})}getActividades(){return i(this,null,function*(){try{let r=this.authService.getCurrentUser();if(!r)return console.log("\u{1F50D} DEBUG: No hay usuario autenticado"),[];console.log("\u{1F50D} DEBUG: Obteniendo actividades para usuario:",r.id);let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).eq("user_id",r.id).order("created_at",{ascending:!1});if(t)throw console.error("\u{1F50D} DEBUG: Error de Supabase:",t),t;return console.log("\u{1F50D} DEBUG: Datos recibidos de Supabase:",e),console.log("\u{1F50D} DEBUG: N\xFAmero de actividades:",e?.length||0),e&&e.length>0&&(console.log("\u{1F50D} DEBUG: Primera actividad completa:",JSON.stringify(e[0],null,2)),console.log("\u{1F50D} DEBUG: ID de primera actividad:",e[0].id,"Tipo:",typeof e[0].id)),e||[]}catch(r){return console.error("\u{1F50D} DEBUG: Error en getActividades:",r),[]}})}getActividadesStats(){return i(this,null,function*(){try{let r=yield this.authService.getCurrentUser();if(!r)return null;let{data:e,error:t}=yield this.supabase.client.from("actividades").select("estado").eq("user_id",r.id);if(t)throw t;return{total:e?.length||0,programado:e?.filter(o=>o.estado==="programado").length||0,ejecucion:e?.filter(o=>o.estado==="ejecucion").length||0,finalizado:e?.filter(o=>o.estado==="finalizado").length||0}}catch(r){return console.error("Error getting actividades stats:",r),null}})}createTarea(r){return i(this,null,function*(){try{console.log("\u{1F4DD} [ActividadesService] Creando nueva tarea:",r);let e=n(c({},r),{created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("tareas").insert([e]).select().single();if(a)throw console.error("\u274C [ActividadesService] Error creando tarea:",a),a;return console.log("\u2705 [ActividadesService] Tarea creada exitosamente:",t),t}catch(e){throw console.error("\u274C [ActividadesService] Error en createTarea:",e),e}})}getTareasByActividad(r){return i(this,null,function*(){try{console.log("\u{1F4CB} [ActividadesService] Obteniendo tareas para actividad:",r),console.log("\u{1F4CB} [ActividadesService] Tipo de actividadId:",typeof r,"Valor:",r);let{data:e,error:t}=yield this.supabase.client.from("tareas").select("*").eq("actividad_id",r).order("orden",{ascending:!0});if(t)throw console.error("\u274C [ActividadesService] Error obteniendo tareas:",t),t;return console.log("\u2705 [ActividadesService] Tareas obtenidas:",e?.length||0),console.log("\u{1F4CB} [ActividadesService] Datos completos:",e),e||[]}catch(e){throw console.error("\u274C [ActividadesService] Error en getTareasByActividad:",e),e}})}calcularProgresoActividad(r){return i(this,null,function*(){try{let e=yield this.getTareasByActividad(r);if(e.length===0)return 0;let t=e.filter(o=>o.completada).length,a=Math.round(t/e.length*100);return console.log(`\u{1F4CA} [ActividadesService] Progreso actividad ${r}: ${a}% (${t}/${e.length})`),a}catch(e){return console.error("\u274C [ActividadesService] Error calculando progreso:",e),0}})}updateTareaEstado(r,e){return i(this,null,function*(){try{console.log("\u{1F504} [ActividadesService] Actualizando estado de tarea:",r,e);let{data:t,error:a}=yield this.supabase.client.from("tareas").select("actividad_id").eq("id",r).single();if(a)throw console.error("\u274C [ActividadesService] Error obteniendo tarea:",a),a;let o={completada:e,updated_at:new Date().toISOString()};e?o.fecha_completado=new Date().toISOString():o.fecha_completado=null;let{data:s,error:d}=yield this.supabase.client.from("tareas").update(o).eq("id",r).select().single();if(d)throw console.error("\u274C [ActividadesService] Error actualizando tarea:",d),d;let u=yield this.calcularProgresoActividad(t.actividad_id);return this.progresoUpdatedSubject.next({actividadId:t.actividad_id,progreso:u}),console.log("\u2705 [ActividadesService] Tarea actualizada exitosamente:",s),s}catch(t){throw console.error("\u274C [ActividadesService] Error en updateTareaEstado:",t),t}})}createFrente(r){return i(this,null,function*(){try{if(!this.authService.getCurrentUser())throw new Error("Usuario no autenticado");let t=n(c({},r),{created_at:new Date().toISOString()}),{data:a,error:o}=yield this.supabase.client.from("frentes").insert([t]).select().single();if(o)throw o;return yield this.loadUserFrente(),a}catch(e){throw console.error("Error creating frente:",e),e}})}updateFrente(r,e){return i(this,null,function*(){try{let{data:t,error:a}=yield this.supabase.client.from("frentes").update(e).eq("id",r).select().single();if(a)throw a;return yield this.loadUserFrente(),t}catch(t){throw console.error("Error updating frente:",t),t}})}updateFrenteLocation(r,e,t){return i(this,null,function*(){try{let{data:a,error:o}=yield this.supabase.client.from("frentes").update({ubicacion_lat:e,ubicacion_lng:t}).eq("id",r).select().single();if(o)throw o;return yield this.loadUserFrente(),a}catch(a){throw console.error("Error updating frente location:",a),a}})}deleteFrente(r){return i(this,null,function*(){try{let{error:e}=yield this.supabase.client.from("frentes").delete().eq("id",r);if(e)throw e;yield this.loadUserFrente()}catch(e){throw console.error("Error deleting frente:",e),e}})}getFrenteById(r){return i(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("frentes").select("*").eq("id",r).single();if(t)throw t;return e}catch(e){return console.error("Error getting frente:",e),null}})}debugUserData(){return i(this,null,function*(){try{console.log("\u{1F527} [DEBUG] === INICIANDO DIAGN\xD3STICO COMPLETO ===");let r=this.authService.getCurrentUser(),e=this.authService.getCurrentProfile();if(console.log("\u{1F464} [DEBUG] Usuario actual:",{user:r?{id:r.id,email:r.email}:"No autenticado",profile:e?{id:e.id,nombre:e.nombre,rol:e.rol}:"No profile"}),!r){console.error("\u274C [DEBUG] No hay usuario autenticado");return}console.log("\u{1F50D} [DEBUG] 1. Verificando obras asignadas...");let{data:t,error:a}=yield this.supabase.client.from("user_obras").select("*").eq("user_id",r.id);console.log("\u{1F4CA} [DEBUG] user_obras resultado:",{userObras:t,userObrasError:a}),console.log("\u{1F50D} [DEBUG] 2. Verificando todas las actividades...");let{data:o,error:s}=yield this.supabase.client.from("actividades").select("id, tipo_actividad, obra_id, user_id, created_at, estado").order("created_at",{ascending:!1}).limit(10);if(console.log("\u{1F4CA} [DEBUG] \xDAltimas 10 actividades:",{allActividades:o,allActError:s}),t&&t.length>0){let d=t.map(m=>m.obra_id);console.log("\u{1F50D} [DEBUG] 3. Verificando actividades para obras:",d);let{data:u,error:E}=yield this.supabase.client.from("actividades").select("id, tipo_actividad, obra_id, user_id, created_at, estado").in("obra_id",d).order("created_at",{ascending:!1});console.log("\u{1F4CA} [DEBUG] Actividades de obras asignadas:",{obraActividades:u,obraActError:E})}console.log("\u{1F527} [DEBUG] === FIN DEL DIAGN\xD3STICO ===")}catch(r){console.error("\u274C [DEBUG] Error en diagn\xF3stico:",r)}})}getUserObras(){return i(this,null,function*(){try{console.log("\u{1F50D} [ActividadesService] getUserObras() - Iniciando carga de obras del usuario");let r=this.authService.getCurrentUser();if(console.log("\u{1F464} [ActividadesService] Usuario actual:",r?{id:r.id,email:r.email}:"No autenticado"),!r)throw console.error("\u274C [ActividadesService] Usuario no autenticado"),new Error("Usuario no autenticado");console.log("\u{1F50D} [ActividadesService] Ejecutando consulta a user_obras para user_id:",r.id);let{data:e,error:t}=yield this.supabase.client.from("user_obras").select(`
          obra_id,
          obras(*)
        `).eq("user_id",r.id);if(console.log("\u{1F4CA} [ActividadesService] Datos recibidos de user_obras:",e),console.log("\u26A0\uFE0F [ActividadesService] Error en consulta:",t),t)throw console.error("\u274C [ActividadesService] Error en consulta user_obras:",t),t;let a=e?.map(o=>o.obras)||[];return console.log("\u{1F3D7}\uFE0F [ActividadesService] Obras mapeadas (resultado final):",a),console.log("\u{1F4C8} [ActividadesService] Cantidad de obras encontradas:",a.length),a}catch(r){return console.error("\u274C [ActividadesService] Error getting user obras:",r),[]}})}refresh(){return i(this,null,function*(){yield Promise.all([this.loadUserActividades(),this.loadUserFrente()])})}static{this.\u0275fac=function(e){return new(e||l)(g(S),g(b))}}static{this.\u0275prov=p({token:l,factory:l.\u0275fac,providedIn:"root"})}}return l})();export{C as a};
