import{a as Be}from"./chunk-VTM53OAN.js";import{a as w,b as Fe}from"./chunk-GJB63F4V.js";import{d as Ke,f as Pe}from"./chunk-ZRWTJLBH.js";import"./chunk-MS4AQ6UA.js";import{a as Te,b as Ae}from"./chunk-DMZJ7K26.js";import{c as we}from"./chunk-7BCONPA6.js";import{b as ye}from"./chunk-ZOXEDHNH.js";import{d as Ce}from"./chunk-ZBUPANVT.js";import"./chunk-F5X5MWHG.js";import{a as je}from"./chunk-6YTEXIFY.js";import{a as ke,b as De}from"./chunk-WI2E4B7N.js";import{a as Me}from"./chunk-IMDEVWQ5.js";import{a as xe,b as Se}from"./chunk-MVE6Y23E.js";import"./chunk-GOBT7UBB.js";import"./chunk-SGYCFQGT.js";import"./chunk-2GVF4P32.js";import{a as Ie}from"./chunk-WFXXN3GR.js";import{g as ae}from"./chunk-YMTLAEZG.js";import"./chunk-G7YPFBNB.js";import{a as ne,b as se,c as le,d as de,f as ce,h as me}from"./chunk-SNSQLCH6.js";import"./chunk-3RK6DDJD.js";import{C as ge,F as ue,G as he,y as pe}from"./chunk-UJ3DDJ5Q.js";import{i as te,j as ie,o as re,p as oe,sa as fe,ua as ve,va as _e,wa as be,xa as Ee}from"./chunk-4WMI5X77.js";import{Db as h,E as D,Eb as V,Fb as H,Nb as i,Ob as t,Pb as C,Qb as J,Rb as Q,Tb as W,Xb as P,Yb as S,ba as N,db as n,f as R,ga as Z,hc as r,ib as M,ic as F,j as y,jc as v,k as K,kc as q,lc as U,mc as X,nc as Y,o as z,oc as ee,pa as O,pb as G,q as k,qa as $,uc as T,vb as x,wc as A}from"./chunk-B6672ACT.js";import"./chunk-X5YLR3NI.js";import{a as B,b as L,i as u}from"./chunk-ODN5LVDJ.js";var Le=(()=>{class s{constructor(e){this.supabase=e}getFrente(){return y(this.supabase.client.from("frentes").select(`
          id,
          nombre,
          descripcion,
          ubicacion_lat,
          ubicacion_lng,
          estado,
          obra_id,
          supervisor_id,
          fecha_inicio,
          fecha_fin_estimada,
          progreso_general,
          presupuesto_asignado,
          presupuesto_utilizado,
          km_inicial,
          km_final,
          coordenadas_inicio,
          coordenadas_fin,
          coordenadas_intermedias,
          coordenadas_gps,
          estado_general,
          created_at,
          updated_at
        `).order("nombre")).pipe(k(e=>e.error?[]:e.data||[]),D(e=>K([])))}getFrenteById(e){return y(this.supabase.client.from("frentes").select(`
          id,
          nombre,
          descripcion,
          ubicacion_lat,
          ubicacion_lng,
          estado,
          obra_id,
          supervisor_id,
          fecha_inicio,
          fecha_fin_estimada,
          progreso_general,
          presupuesto_asignado,
          presupuesto_utilizado,
          km_inicial,
          km_final,
          coordenadas_inicio,
          coordenadas_fin,
          coordenadas_intermedias,
          coordenadas_gps,
          estado_general,
          created_at,
          updated_at
        `).eq("id",e).single()).pipe(k(a=>a.error?null:a.data),D(a=>K(null)))}createFrente(e){return y(this.supabase.client.from("frentes").insert(L(B({},e),{created_at:new Date().toISOString(),updated_at:new Date().toISOString()})).select().single()).pipe(k(a=>a.error?null:a.data),D(a=>K(null)))}updateFrente(e,a){return y(this.supabase.client.from("frentes").update(L(B({},a),{updated_at:new Date().toISOString()})).eq("id",e).select().single()).pipe(k(o=>o.error?null:o.data),D(o=>K(null)))}deleteFrente(e){return y(this.supabase.client.from("frentes").delete().eq("id",e)).pipe(k(a=>!a.error),D(a=>K(!1)))}static{this.\u0275fac=function(a){return new(a||s)(Z(Ie))}}static{this.\u0275prov=N({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();function Ve(s,f){if(s&1&&(i(0,"mat-option",14),r(1),t()),s&2){let e=f.$implicit;h("value",e.id),n(),v(" ",e.nombre," ")}}function We(s,f){s&1&&(i(0,"div",15),C(1,"mat-progress-bar",16),i(2,"p"),r(3,"Cargando m\xE9tricas kilom\xE9tricas..."),t()())}function qe(s,f){if(s&1&&(i(0,"div",36)(1,"mat-icon",55),r(2,"warning"),t(),i(3,"span",56),r(4),t()()),s&2){let e=S(2);n(4),v("",e.metricas.alertasKilometricas," kil\xF3metros con progreso bajo")}}function Re(s,f){if(s&1&&(i(0,"div",57),C(1,"div",58),i(2,"span",59),r(3),t()()),s&2){let e=f.$implicit;n(),V("background-color",e.color),n(2),U("",e.estado,": ",e.cantidad," (",e.porcentaje,"%)")}}function ze(s,f){if(s&1){let e=W();i(0,"div",60)(1,"div",61)(2,"span",62),r(3),t()(),i(4,"div",61)(5,"span",63),r(6),t()(),i(7,"div",61)(8,"span",64),r(9),t()(),i(10,"div",61)(11,"div",65),C(12,"mat-progress-bar",66),i(13,"span",67),r(14),t()()(),i(15,"div",61)(16,"span",68)(17,"mat-icon"),r(18,"assignment"),t(),r(19),t()(),i(20,"div",61)(21,"button",69),P("click",function(){let o=O(e).$implicit,c=S(2);return $(c.viewKilometroDetails(o.kilometro))}),i(22,"mat-icon"),r(23,"visibility"),t()()()()}if(s&2){let e=f.$implicit,a=S(2);n(3),v("KM ",e.kilometro,""),n(3),F(e.frente),n(2),V("background-color",a.getEstadoColor(e.estado))("color","white"),n(),v(" ",a.getEstadoLabel(e.estado)," "),n(3),h("value",e.progreso)("color",a.getProgressColor(e.progreso)),n(2),v("",e.progreso,"%"),n(5),v(" ",e.actividades," ")}}function Ne(s,f){s&1&&(i(0,"div",70)(1,"mat-icon"),r(2,"straighten"),t(),i(3,"p"),r(4,"No hay kil\xF3metros registrados"),t(),i(5,"p",71),r(6,"Los kil\xF3metros aparecer\xE1n aqu\xED cuando se registren en los frentes"),t()())}function Ze(s,f){if(s&1){let e=W();J(0),i(1,"div",77)(2,"mat-icon"),r(3,"warning"),t()(),i(4,"div",78)(5,"div",79),r(6),t(),i(7,"div",80),r(8),t()(),i(9,"div",81)(10,"button",82),P("click",function(){O(e);let o=S().$implicit,c=S(3);return $(c.viewKilometroDetails(o.kilometro))}),i(11,"mat-icon"),r(12,"visibility"),t(),r(13," Ver Detalles "),t()(),Q()}if(s&2){let e=S().$implicit;n(6),v("Kil\xF3metro ",e.kilometro," - Progreso Bajo"),n(2),q(" Solo ",e.progreso,"% completado con ",e.actividades," actividades registradas ")}}function Ge(s,f){if(s&1&&(i(0,"div",75),x(1,Ze,14,3,"ng-container",76),t()),s&2){let e=f.$implicit;n(),h("ngIf",e.estado==="en_progreso"&&e.progreso<30)}}function He(s,f){if(s&1&&(i(0,"mat-card",72)(1,"mat-card-header")(2,"mat-card-title")(3,"mat-icon",55),r(4,"warning"),t(),r(5," Alertas y Recomendaciones "),t(),i(6,"mat-card-subtitle"),r(7,"Kil\xF3metros que requieren atenci\xF3n"),t()(),i(8,"mat-card-content")(9,"div",73),x(10,Ge,2,1,"div",74),t()()()),s&2){let e=S(2);n(10),h("ngForOf",e.progresoKilometrico)}}function Je(s,f){if(s&1&&(i(0,"div",17)(1,"div",18)(2,"mat-card",19)(3,"mat-card-content")(4,"div",20)(5,"mat-icon"),r(6,"straighten"),t()(),i(7,"div",21)(8,"div",22),r(9),t(),i(10,"div",23),r(11,"Total Kil\xF3metros"),t()()()(),i(12,"mat-card",24)(13,"mat-card-content")(14,"div",20)(15,"mat-icon"),r(16,"check_circle"),t()(),i(17,"div",21)(18,"div",22),r(19),t(),i(20,"div",23),r(21,"Completados"),t(),i(22,"div",25),r(23),T(24,"number"),t()()()(),i(25,"mat-card",26)(26,"mat-card-content")(27,"div",20)(28,"mat-icon"),r(29,"trending_up"),t()(),i(30,"div",21)(31,"div",22),r(32),t(),i(33,"div",23),r(34,"En Progreso"),t(),i(35,"div",25),r(36),T(37,"number"),t()()()(),i(38,"mat-card",27)(39,"mat-card-content")(40,"div",20)(41,"mat-icon"),r(42,"schedule"),t()(),i(43,"div",21)(44,"div",22),r(45),t(),i(46,"div",23),r(47,"Pendientes"),t(),i(48,"div",25),r(49),T(50,"number"),t()()()()(),i(51,"mat-card",28)(52,"mat-card-header")(53,"mat-card-title")(54,"mat-icon"),r(55,"analytics"),t(),r(56," Progreso General "),t(),i(57,"mat-card-subtitle"),r(58,"Avance promedio de todos los kil\xF3metros"),t()(),i(59,"mat-card-content")(60,"div",29)(61,"div",30)(62,"div",31),r(63),t(),i(64,"div",32),r(65),t()(),i(66,"div",33),C(67,"mat-progress-bar",34),t()(),i(68,"div",35)(69,"div",36)(70,"mat-icon"),r(71,"construction"),t(),i(72,"span",37),r(73),t()(),x(74,qe,5,1,"div",38),t()()(),i(75,"div",39)(76,"mat-card",40)(77,"mat-card-header")(78,"mat-card-title")(79,"mat-icon"),r(80,"pie_chart"),t(),r(81," Distribuci\xF3n por Estados "),t(),i(82,"mat-card-subtitle"),r(83,"Kil\xF3metros agrupados por estado actual"),t()(),i(84,"mat-card-content")(85,"div",41),C(86,"canvas",42),t(),i(87,"div",43),x(88,Re,4,5,"div",44),t()()(),i(89,"mat-card",40)(90,"mat-card-header")(91,"mat-card-title")(92,"mat-icon"),r(93,"bar_chart"),t(),r(94," Progreso por Kil\xF3metro "),t(),i(95,"mat-card-subtitle"),r(96,"Porcentaje de avance de cada kil\xF3metro"),t()(),i(97,"mat-card-content")(98,"div",41),C(99,"canvas",45),t()()(),i(100,"mat-card",46)(101,"mat-card-header")(102,"mat-card-title")(103,"mat-icon"),r(104,"show_chart"),t(),r(105," Tendencia de Progreso "),t(),i(106,"mat-card-subtitle"),r(107,"Evoluci\xF3n del progreso promedio en los \xFAltimos 7 d\xEDas"),t()(),i(108,"mat-card-content")(109,"div",41),C(110,"canvas",47),t()()()(),i(111,"mat-card",48)(112,"mat-card-header")(113,"mat-card-title")(114,"mat-icon"),r(115,"table_chart"),t(),r(116," Detalle por Kil\xF3metro "),t(),i(117,"mat-card-subtitle"),r(118,"Informaci\xF3n detallada de cada kil\xF3metro"),t()(),i(119,"mat-card-content")(120,"div",49)(121,"div",50)(122,"div",51),r(123,"Kil\xF3metro"),t(),i(124,"div",51),r(125,"Frente"),t(),i(126,"div",51),r(127,"Estado"),t(),i(128,"div",51),r(129,"Progreso"),t(),i(130,"div",51),r(131,"Actividades"),t(),i(132,"div",51),r(133,"Acciones"),t()(),x(134,ze,24,11,"div",52)(135,Ne,7,0,"div",53),t()()(),x(136,He,11,1,"mat-card",54),t()),s&2){let e=S();n(9),F(e.metricas.totalKilometros),n(10),F(e.metricas.kilometrosCompletados),n(4),v("",e.metricas.totalKilometros>0?A(24,18,e.metricas.kilometrosCompletados/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),n(9),F(e.metricas.kilometrosEnProgreso),n(4),v("",e.metricas.totalKilometros>0?A(37,21,e.metricas.kilometrosEnProgreso/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),n(9),F(e.metricas.kilometrosPendientes),n(4),v("",e.metricas.totalKilometros>0?A(50,24,e.metricas.kilometrosPendientes/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),n(14),v("",e.metricas.progresoPromedio,"%"),n(2),q(" ",e.metricas.actividadesCompletadas," de ",e.metricas.actividadesTotales," actividades completadas "),n(2),h("value",e.metricas.progresoPromedio)("color",e.getProgressColor(e.metricas.progresoPromedio)),n(6),v("",e.metricas.frentesActivos," frentes activos"),n(),h("ngIf",e.metricas.alertasKilometricas>0),n(14),h("ngForOf",e.estadisticasPorEstado),n(46),h("ngForOf",e.progresoKilometrico),n(),h("ngIf",e.progresoKilometrico.length===0),n(),h("ngIf",e.metricas.alertasKilometricas>0)}}w.register(...Fe);var kt=(()=>{class s{constructor(e,a,o,c){this.kilometrosService=e,this.frentesService=a,this.actividadesService=o,this.tareasService=c,this.destroy$=new R,this.isLoading=!0,this.metricas={totalKilometros:0,kilometrosCompletados:0,kilometrosEnProgreso:0,kilometrosPendientes:0,progresoPromedio:0,actividadesTotales:0,actividadesCompletadas:0,frentesActivos:0,alertasKilometricas:0},this.estadisticasPorEstado=[],this.progresoKilometrico=[],this.frenteSeleccionado="todos",this.frentes=[],this.estadosChart=null,this.progresoChart=null,this.tendenciaChart=null,this.tendenciaProgreso=[]}ngOnInit(){console.log("\u{1F680} [DashboardKilometrico] ngOnInit ejecutado - iniciando carga de datos"),this.loadDashboardData()}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete(),this.destroyCharts()}loadDashboardData(){return u(this,null,function*(){try{console.log("\u{1F504} [Dashboard] Iniciando carga de datos del dashboard kilom\xE9trico"),this.isLoading=!0,yield Promise.all([this.loadFrente(),this.loadMetricasKilometricas(),this.loadEstadisticasPorEstado(),this.loadProgresoKilometrico(),this.loadTendenciaProgreso()]),setTimeout(()=>{this.createCharts()},100)}catch{}finally{this.isLoading=!1}})}loadFrente(){return u(this,null,function*(){try{console.log("\u{1F504} [Dashboard] Cargando frentes..."),this.frentes=(yield z(this.frentesService.getFrente()))||[],console.log("\u2705 [Dashboard] Frentes cargados:",this.frentes.length,this.frentes)}catch(e){console.error("\u274C [Dashboard] Error loading frentes:",e),this.frentes=[]}})}loadMetricasKilometricas(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando m\xE9tricas kilom\xE9tricas basadas en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(o=>o.frente_id===this.frenteSeleccionado);try{let o=(yield this.actividadesService.getActividades())||[],c=a.map(l=>u(this,null,function*(){let m=o.filter(E=>E.kilometro===l.kilometro);if(m.length===0)return{progreso:0,estado:"pendiente"};let p=yield Promise.all(m.map(E=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(E.id)).progreso}catch{return E.progreso_porcentaje||0}}))),b=p.length>0?p.reduce((E,j)=>E+j,0)/p.length:0,g="pendiente";return b===0?g="pendiente":b>=100?g="completado":g="en_progreso",{progreso:b,estado:g}})),d=yield Promise.all(c);if(this.metricas.totalKilometros=a.length,this.metricas.kilometrosCompletados=d.filter(l=>l.estado==="completado").length,this.metricas.kilometrosEnProgreso=d.filter(l=>l.estado==="en_progreso").length,this.metricas.kilometrosPendientes=d.filter(l=>l.estado==="pendiente").length,d.length>0){let l=d.reduce((m,p)=>m+p.progreso,0);this.metricas.progresoPromedio=Math.round(l/d.length)}let _=o.filter(l=>l.kilometro!==null&&l.kilometro!==void 0);this.metricas.actividadesTotales=_.length,this.metricas.actividadesCompletadas=_.filter(l=>l.estado==="finalizado").length;let I=new Set(a.map(l=>l.frente_id));this.metricas.frentesActivos=I.size,this.metricas.alertasKilometricas=d.filter(l=>l.estado==="en_progreso"&&l.progreso<30).length,console.log("\u2705 [DashboardKilometrico] M\xE9tricas kilom\xE9tricas calculadas:",this.metricas)}catch(o){console.error("\u274C [DashboardKilometrico] Error calculando m\xE9tricas:",o)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading m\xE9tricas kilom\xE9tricas:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadMetricasKilometricas:",e)}})}loadEstadisticasPorEstado(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando estad\xEDsticas por estado basadas en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(o=>o.frente_id===this.frenteSeleccionado);try{let o=(yield this.actividadesService.getActividades())||[],c=a.map(l=>u(this,null,function*(){let m=o.filter(g=>g.kilometro===l.kilometro);if(m.length===0)return"pendiente";let p=yield Promise.all(m.map(g=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(g.id)).progreso}catch{return g.progreso_porcentaje||0}}))),b=p.length>0?p.reduce((g,E)=>g+E,0)/p.length:0;return b===0?"pendiente":b>=100?"completado":"en_progreso"})),_=(yield Promise.all(c)).reduce((l,m)=>(l[m]=(l[m]||0)+1,l),{}),I={pendiente:"#ff9800",en_progreso:"#2196f3",completado:"#4caf50",pausado:"#f44336"};this.estadisticasPorEstado=Object.entries(_).map(([l,m])=>({estado:this.getEstadoLabel(l),cantidad:m,porcentaje:Math.round(m/a.length*100),color:I[l]||"#9e9e9e"})),console.log("\u2705 [DashboardKilometrico] Estad\xEDsticas por estado calculadas:",_)}catch(o){console.error("\u274C [DashboardKilometrico] Error calculando estad\xEDsticas:",o)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading estad\xEDsticas por estado:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadEstadisticasPorEstado:",e)}})}loadProgresoKilometrico(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando progreso kilom\xE9trico con c\xE1lculo basado en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(o=>o.frente_id===this.frenteSeleccionado);try{let o=(yield this.actividadesService.getActividades())||[],c=a.map(d=>u(this,null,function*(){let _=o.filter(p=>p.kilometro===d.kilometro),I=this.frentes.find(p=>p.id===d.frente_id),l=0,m="pendiente";if(_.length>0){let p=yield Promise.all(_.map(b=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(b.id)).progreso}catch(g){return console.warn(`No se pudieron obtener tareas para actividad ${b.id}:`,g),b.progreso_porcentaje||0}})));l=p.length>0?Math.round(p.reduce((b,g)=>b+g,0)/p.length):0,l===0?m="pendiente":l>=100?m="completado":m="en_progreso"}return console.log(`\u{1F4CA} [DashboardKilometrico] KM ${d.kilometro}: ${_.length} actividades, progreso: ${l}%, estado: ${m}`),{kilometro:d.kilometro,progreso:l,actividades:_.length,estado:m,frente:I?.nombre||"Sin frente"}}));this.progresoKilometrico=(yield Promise.all(c)).sort((d,_)=>d.kilometro-_.kilometro),console.log("\u2705 [DashboardKilometrico] Progreso kilom\xE9trico calculado:",this.progresoKilometrico)}catch(o){console.error("\u274C [DashboardKilometrico] Error loading actividades:",o)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading progreso kilom\xE9trico:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadProgresoKilometrico:",e)}})}loadTendenciaProgreso(){return u(this,null,function*(){try{let e=[],a=new Date;for(let o=6;o>=0;o--){let c=new Date(a);c.setDate(c.getDate()-o),e.push({fecha:c.toLocaleDateString("es-ES",{month:"short",day:"numeric"}),progreso:Math.round(this.metricas.progresoPromedio-o*2+Math.random()*5)})}this.tendenciaProgreso=e}catch(e){console.error("Error loading tendencia progreso:",e)}})}createCharts(){this.createEstadosChart(),this.createProgresoChart(),this.createTendenciaChart()}createEstadosChart(){let e=document.getElementById("estadosChart");e&&(this.estadosChart=new w(e,{type:"doughnut",data:{labels:this.estadisticasPorEstado.map(a=>a.estado),datasets:[{data:this.estadisticasPorEstado.map(a=>a.cantidad),backgroundColor:this.estadisticasPorEstado.map(a=>a.color),borderWidth:2,borderColor:"#fff"}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"bottom",labels:{padding:20,usePointStyle:!0}}}}}))}createProgresoChart(){let e=document.getElementById("progresoChart");if(!e)return;let a=this.progresoKilometrico.map(o=>o.progreso>=80?"#4caf50":o.progreso>=50?"#2196f3":o.progreso>=20?"#ff9800":"#f44336");this.progresoChart=new w(e,{type:"bar",data:{labels:this.progresoKilometrico.map(o=>`KM ${o.kilometro}`),datasets:[{label:"Progreso (%)",data:this.progresoKilometrico.map(o=>o.progreso),backgroundColor:a,borderColor:a,borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,max:100,ticks:{callback:function(o){return o+"%"}}}},plugins:{legend:{display:!1},tooltip:{callbacks:{afterLabel:o=>{let c=o.dataIndex,d=this.progresoKilometrico[c];return[`Actividades: ${d.actividades}`,`Estado: ${this.getEstadoLabel(d.estado)}`,`Frente: ${d.frente}`]}}}}}})}createTendenciaChart(){let e=document.getElementById("tendenciaChart");e&&(this.tendenciaChart=new w(e,{type:"line",data:{labels:this.tendenciaProgreso.map(a=>a.fecha),datasets:[{label:"Progreso Promedio (%)",data:this.tendenciaProgreso.map(a=>a.progreso),borderColor:"#1976d2",backgroundColor:"rgba(25, 118, 210, 0.1)",borderWidth:3,fill:!0,tension:.4,pointBackgroundColor:"#1976d2",pointBorderColor:"#fff",pointBorderWidth:2,pointRadius:6}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,max:100,ticks:{callback:function(a){return a+"%"}}}},plugins:{legend:{display:!1}}}}))}destroyCharts(){this.estadosChart&&(this.estadosChart.destroy(),this.estadosChart=null),this.progresoChart&&(this.progresoChart.destroy(),this.progresoChart=null),this.tendenciaChart&&(this.tendenciaChart.destroy(),this.tendenciaChart=null)}getEstadoLabel(e){return{pendiente:"Pendiente",en_progreso:"En Progreso",completado:"Completado",pausado:"Pausado"}[e]||e}getEstadoColor(e){return{pendiente:"#ff9800",en_progreso:"#2196f3",completado:"#4caf50",pausado:"#f44336"}[e]||"#9e9e9e"}getProgressColor(e){return e>=80?"primary":e>=50?"accent":(e>=20,"warn")}onFrenteChange(){this.loadDashboardData()}refreshData(){this.loadDashboardData()}exportData(){console.log("Exportando datos kilom\xE9tricos...")}viewKilometroDetails(e){console.log("Ver detalles del kil\xF3metro:",e)}static{this.\u0275fac=function(a){return new(a||s)(M(Be),M(Le),M(Me),M(je))}}static{this.\u0275cmp=G({type:s,selectors:[["app-dashboard-kilometrico"]],decls:28,vars:8,consts:[[1,"dashboard-kilometrico-container"],[1,"dashboard-header"],[1,"header-title"],[1,"subtitle"],[1,"header-actions"],["appearance","outline",1,"frente-filter"],[3,"valueChange","selectionChange","value"],["value","todos"],[3,"value",4,"ngFor","ngForOf"],["matSuffix",""],["mat-icon-button","","matTooltip","Actualizar datos",3,"click","disabled"],["mat-raised-button","","color","primary",3,"click","disabled"],["class","loading-container",4,"ngIf"],["class","dashboard-content",4,"ngIf"],[3,"value"],[1,"loading-container"],["mode","indeterminate"],[1,"dashboard-content"],[1,"metrics-grid"],[1,"metric-card","primary"],[1,"metric-icon"],[1,"metric-info"],[1,"metric-value"],[1,"metric-label"],[1,"metric-card","success"],[1,"metric-percentage"],[1,"metric-card","info"],[1,"metric-card","warning"],[1,"progress-card"],[1,"progress-section"],[1,"progress-info"],[1,"progress-value"],[1,"progress-description"],[1,"progress-bar-container"],[1,"main-progress-bar",3,"value","color"],[1,"additional-metrics"],[1,"additional-metric"],[1,"metric-text"],["class","additional-metric",4,"ngIf"],[1,"charts-grid"],[1,"chart-card"],[1,"chart-container"],["id","estadosChart"],[1,"chart-legend"],["class","legend-item",4,"ngFor","ngForOf"],["id","progresoChart"],[1,"chart-card","full-width"],["id","tendenciaChart"],[1,"table-card"],[1,"table-container"],[1,"table-header"],[1,"header-cell"],["class","table-row",4,"ngFor","ngForOf"],["class","empty-table",4,"ngIf"],["class","alerts-card",4,"ngIf"],[1,"warning-icon"],[1,"metric-text","warning"],[1,"legend-item"],[1,"legend-color"],[1,"legend-text"],[1,"table-row"],[1,"table-cell"],[1,"km-number"],[1,"frente-name"],[1,"estado-badge"],[1,"progress-cell"],[1,"table-progress",3,"value","color"],[1,"progress-text"],[1,"activities-count"],["mat-icon-button","","matTooltip","Ver detalles",3,"click"],[1,"empty-table"],[1,"empty-subtitle"],[1,"alerts-card"],[1,"alerts-list"],["class","alert-item",4,"ngFor","ngForOf"],[1,"alert-item"],[4,"ngIf"],[1,"alert-icon"],[1,"alert-content"],[1,"alert-title"],[1,"alert-description"],[1,"alert-actions"],["mat-button","","color","primary",3,"click"]],template:function(a,o){a&1&&(i(0,"div",0)(1,"div",1)(2,"div",2)(3,"h2")(4,"mat-icon"),r(5,"straighten"),t(),r(6," Dashboard Kilom\xE9trico "),t(),i(7,"p",3),r(8,"M\xE9tricas y progreso de obras viales por kil\xF3metro"),t()(),i(9,"div",4)(10,"mat-form-field",5)(11,"mat-label"),r(12,"Filtrar por Frente"),t(),i(13,"mat-select",6),ee("valueChange",function(d){return Y(o.frenteSeleccionado,d)||(o.frenteSeleccionado=d),d}),P("selectionChange",function(){return o.onFrenteChange()}),i(14,"mat-option",7),r(15,"Todos los Frentes"),t(),x(16,Ve,2,2,"mat-option",8),t(),i(17,"mat-icon",9),r(18,"filter_list"),t()(),i(19,"button",10),P("click",function(){return o.refreshData()}),i(20,"mat-icon"),r(21,"refresh"),t()(),i(22,"button",11),P("click",function(){return o.exportData()}),i(23,"mat-icon"),r(24,"download"),t(),r(25," Exportar "),t()()(),x(26,We,4,0,"div",12)(27,Je,137,27,"div",13),t()),a&2&&(n(13),X("value",o.frenteSeleccionado),n(3),h("ngForOf",o.frentes),n(3),h("disabled",o.isLoading),n(),H("spinning",o.isLoading),n(2),h("disabled",o.isLoading),n(4),h("ngIf",o.isLoading),n(),h("ngIf",!o.isLoading))},dependencies:[oe,te,ie,re,me,ne,le,ce,de,se,_e,ve,fe,Ee,be,Se,xe,Ce,ye,Ke,De,ke,Pe,Ae,ue,pe,ge,Te,we,he,ae],encapsulation:2})}}return s})();export{kt as DashboardKilometricoComponent};
