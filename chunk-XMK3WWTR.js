import{c as E}from"./chunk-ZJYJPMQY.js";import{A as y,E as f,V as b,ba as S,g,ga as h,j as c,k as l,q as O,va as R,x as m}from"./chunk-OYRL5FJJ.js";import{a as p,b as d,i as o}from"./chunk-ODN5LVDJ.js";var w=(()=>{class a{constructor(t){this.injector=t,this.DB_NAME="OfflineSyncDB",this.DB_VERSION=1,this.OPERATIONS_STORE="operations",this.db=null,this.syncStatusSubject=new g({isOnline:navigator.onLine,isSyncing:!1,pendingOperations:0,syncErrors:[]}),this.syncStatus$=this.syncStatusSubject.asObservable(),this.reportsService=null,this.initDatabase(),this.setupOnlineDetection(),this.startPeriodicSync(),this.isOnline$=y(m(window,"online").pipe(O(()=>!0)),m(window,"offline").pipe(O(()=>!1))).pipe(b(navigator.onLine)),this.isOnline$.subscribe(e=>{this.updateSyncStatus({isOnline:e}),e&&this.syncPendingOperations()})}initDatabase(){return o(this,null,function*(){return new Promise((t,e)=>{let r=indexedDB.open(this.DB_NAME,this.DB_VERSION);r.onerror=()=>e(r.error),r.onsuccess=()=>{this.db=r.result,this.loadPendingOperationsCount(),t()},r.onupgradeneeded=n=>{let i=n.target.result;if(!i.objectStoreNames.contains(this.OPERATIONS_STORE)){let s=i.createObjectStore(this.OPERATIONS_STORE,{keyPath:"id"});s.createIndex("timestamp","timestamp",{unique:!1}),s.createIndex("type","type",{unique:!1})}}})})}setupOnlineDetection(){window.addEventListener("online",()=>{this.updateSyncStatus({isOnline:!0}),this.syncPendingOperations()}),window.addEventListener("offline",()=>{this.updateSyncStatus({isOnline:!1})})}startPeriodicSync(){console.log("Sincronizaci\xF3n autom\xE1tica deshabilitada para resolver problemas de concurrencia con NavigatorLockManager"),console.log("Use syncPendingOperations() manualmente cuando sea necesario")}getReportsService(){return this.reportsService||(this.reportsService=this.injector.get(I)),this.reportsService}updateSyncStatus(t){let e=this.syncStatusSubject.value;this.syncStatusSubject.next(p(p({},e),t))}loadPendingOperationsCount(){return o(this,null,function*(){if(!this.db)return;let r=this.db.transaction([this.OPERATIONS_STORE],"readonly").objectStore(this.OPERATIONS_STORE).count();r.onsuccess=()=>{this.updateSyncStatus({pendingOperations:r.result})}})}queueOperation(t){return o(this,null,function*(){if(!this.db)return;let e=d(p({},t),{id:this.generateId(),timestamp:Date.now(),retryCount:0}),n=this.db.transaction([this.OPERATIONS_STORE],"readwrite").objectStore(this.OPERATIONS_STORE);yield new Promise((i,s)=>{let u=n.add(e);u.onsuccess=()=>{this.loadPendingOperationsCount(),i()},u.onerror=()=>s(u.error)}),navigator.onLine&&this.syncPendingOperations()})}syncPendingOperations(){return o(this,null,function*(){if(!(!this.db||!navigator.onLine||this.syncStatusSubject.value.isSyncing)){this.updateSyncStatus({isSyncing:!0,syncErrors:[]});try{let e=yield this.getPendingOperations(),r=[];for(let n of e)try{yield this.executeOperation(n),yield this.removeOperation(n.id)}catch(i){console.error(`Error executing operation ${n.id}:`,i),r.push(`Error en operaci\xF3n ${n.type}: ${i}`),n.retryCount++,n.retryCount>=n.maxRetries?(yield this.removeOperation(n.id),r.push(`Operaci\xF3n ${n.type} eliminada tras ${n.maxRetries} intentos fallidos`)):yield this.updateOperation(n)}this.updateSyncStatus({isSyncing:!1,lastSyncTime:new Date,syncErrors:r}),yield this.loadPendingOperationsCount()}catch(e){console.error("Error during sync:",e),this.updateSyncStatus({isSyncing:!1,syncErrors:[`Error general de sincronizaci\xF3n: ${e}`]})}}})}getPendingOperations(){return o(this,null,function*(){return this.db?new Promise(t=>{let i=this.db.transaction([this.OPERATIONS_STORE],"readonly").objectStore(this.OPERATIONS_STORE).index("timestamp").getAll();i.onsuccess=()=>t(i.result),i.onerror=()=>t([])}):[]})}executeOperation(t){return o(this,null,function*(){switch(t.type){case"create_report":yield this.getReportsService().createReport(t.data).toPromise();break;case"update_report":yield this.getReportsService().updateReport(t.data.id,t.data.updates).toPromise();break;case"create_report_item":yield this.getReportsService().createReportItems([t.data]).toPromise();break;default:throw new Error(`Unknown operation type: ${t.type}`)}})}removeOperation(t){return o(this,null,function*(){if(!this.db)return;let r=this.db.transaction([this.OPERATIONS_STORE],"readwrite").objectStore(this.OPERATIONS_STORE);return new Promise((n,i)=>{let s=r.delete(t);s.onsuccess=()=>n(),s.onerror=()=>i(s.error)})})}updateOperation(t){return o(this,null,function*(){if(!this.db)return;let r=this.db.transaction([this.OPERATIONS_STORE],"readwrite").objectStore(this.OPERATIONS_STORE);return new Promise((n,i)=>{let s=r.put(t);s.onsuccess=()=>n(),s.onerror=()=>i(s.error)})})}generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}createReportOffline(t){return o(this,null,function*(){yield this.queueOperation({type:"create_report",data:t,maxRetries:3})})}updateReportOffline(t,e){return o(this,null,function*(){yield this.queueOperation({type:"update_report",data:{id:t,updates:e},maxRetries:3})})}createReportItemOffline(t){return o(this,null,function*(){yield this.queueOperation({type:"create_report_item",data:t,maxRetries:3})})}clearPendingOperations(){return o(this,null,function*(){if(!this.db)return;let e=this.db.transaction([this.OPERATIONS_STORE],"readwrite").objectStore(this.OPERATIONS_STORE);return new Promise((r,n)=>{let i=e.clear();i.onsuccess=()=>{this.loadPendingOperationsCount(),r()},i.onerror=()=>n(i.error)})})}static{this.\u0275fac=function(e){return new(e||a)(h(R))}}static{this.\u0275prov=S({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();var I=(()=>{class a{constructor(t,e){this.supabase=t,this.offlineSync=e}getAllReports(){return c(this.supabase.client.from("reports").select(`
          *,
          project:projects(*)
        `).order("created_at",{ascending:!1}).then(({data:t,error:e})=>{if(e)throw console.error("Error fetching reports:",e),e;return t||[]}))}getReportsByProject(t){return c(this.supabase.client.from("reports").select(`
          *,
          project:projects(*)
        `).eq("project_id",t).order("created_at",{ascending:!1}).then(({data:e,error:r})=>{if(r)throw console.error("Error fetching reports by project:",r),r;return e||[]}))}getReportById(t){return c(this.supabase.client.from("reports").select(`
          *,
          project:projects(*),
          report_items(
            *,
            item:items(*)
          )
        `).eq("id",t).single().then(({data:e,error:r})=>{if(r)throw console.error("Error fetching report:",r),r;return e}))}generateReportNumber(t){return c(this.supabase.client.from("reports").select("report_number").eq("project_id",t).order("created_at",{ascending:!1}).limit(1).then(({data:e,error:r})=>{if(r)throw console.error("Error generating report number:",r),r;let n=1;if(e&&e.length>0){let u=e[0].report_number.match(/(\d+)$/);u&&(n=parseInt(u[1])+1)}return`INF-${new Date().getFullYear()}-${n.toString().padStart(3,"0")}`}))}createReport(t){return c(this.supabase.client.from("reports").insert([t]).select(`
          *,
          project:projects(*)
        `).single().then(({data:e,error:r})=>{if(r)throw console.error("Error creating report:",r),r;return e})).pipe(f(e=>{console.log("Connection error, queuing report for offline sync"),this.offlineSync.createReportOffline(t);let r=d(p({},t),{id:this.offlineSync.generateId(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()});return l(r)}))}createReportItems(t){return c(this.supabase.client.from("report_items").insert(t).select(`
          *,
          item:items(*)
        `).then(({data:e,error:r})=>{if(r)throw console.error("Error creating report items:",r),r;return e||[]})).pipe(f(e=>{console.log("Connection error, queuing report items for offline sync"),t.forEach(n=>{this.offlineSync.createReportItemOffline(n)});let r=t.map(n=>d(p({},n),{id:this.offlineSync.generateId(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()}));return l(r)}))}updateReport(t,e){return c(this.supabase.client.from("reports").update(e).eq("id",t).select(`
          *,
          project:projects(*)
        `).single().then(({data:r,error:n})=>{if(n)throw console.error("Error updating report:",n),n;return r})).pipe(f(r=>{console.log("Connection error, queuing report update for offline sync"),this.offlineSync.updateReportOffline(t,e);let n=d(p({},e),{id:t,updated_at:new Date().toISOString()});return l(n)}))}deleteReport(t){return c(this.supabase.client.from("reports").delete().eq("id",t).then(({error:e})=>{if(e)throw console.error("Error deleting report:",e),e}))}static{this.\u0275fac=function(e){return new(e||a)(h(E),h(w))}}static{this.\u0275prov=S({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();export{I as a};
