import{a as g}from"./chunk-4SALBWPR.js";import{c as h}from"./chunk-ZJYJPMQY.js";import{ba as u,g as d,ga as l}from"./chunk-OYRL5FJJ.js";import{a as n,b as i,i as s}from"./chunk-ODN5LVDJ.js";var m=(()=>{class c{constructor(a,e){this.supabase=a,this.authService=e,this.tareasSubject=new d([]),this.tareas$=this.tareasSubject.asObservable(),console.log("\u{1F527} [TareasService] Servicio inicializado")}createTarea(a){return s(this,null,function*(){try{console.log("\u{1F4DD} [TareasService] Creando nueva tarea:",a);let e=i(n({},a),{created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),{data:r,error:t}=yield this.supabase.client.from("tareas").insert([e]).select().single();if(t)throw console.error("\u274C [TareasService] Error creando tarea:",t),t;return console.log("\u2705 [TareasService] Tarea creada exitosamente:",r),r}catch(e){throw console.error("\u274C [TareasService] Error en createTarea:",e),e}})}getTareasByActividad(a){return s(this,null,function*(){try{console.log("\u{1F50D} [TareasService] Obteniendo tareas para actividad:",a);let{data:e,error:r}=yield this.supabase.client.from("tareas").select("*").eq("actividad_id",a).order("orden",{ascending:!0});if(r)throw console.error("\u274C [TareasService] Error obteniendo tareas:",r),r;return console.log("\u2705 [TareasService] Tareas obtenidas:",e?.length||0),e||[]}catch(e){return console.error("\u274C [TareasService] Error en getTareasByActividad:",e),[]}})}updateTareaEstado(a,e){return s(this,null,function*(){try{console.log("\u{1F504} [TareasService] Actualizando estado de tarea:",a,"completada:",e);let r={completada:e,updated_at:new Date().toISOString()};e?r.fecha_completado=new Date().toISOString():r.fecha_completado=null;let{data:t,error:o}=yield this.supabase.client.from("tareas").update(r).eq("id",a).select().single();if(o)throw console.error("\u274C [TareasService] Error actualizando tarea:",o),o;return console.log("\u2705 [TareasService] Estado de tarea actualizado:",t),t}catch(r){throw console.error("\u274C [TareasService] Error en updateTareaEstado:",r),r}})}updateTarea(a,e){return s(this,null,function*(){try{console.log("\u{1F504} [TareasService] Actualizando tarea:",a,e);let r=i(n({},e),{updated_at:new Date().toISOString()}),{data:t,error:o}=yield this.supabase.client.from("tareas").update(r).eq("id",a).select().single();if(o)throw console.error("\u274C [TareasService] Error actualizando tarea:",o),o;return console.log("\u2705 [TareasService] Tarea actualizada:",t),t}catch(r){throw console.error("\u274C [TareasService] Error en updateTarea:",r),r}})}deleteTarea(a){return s(this,null,function*(){try{console.log("\u{1F5D1}\uFE0F [TareasService] Eliminando tarea:",a);let{error:e}=yield this.supabase.client.from("tareas").delete().eq("id",a);if(e)throw console.error("\u274C [TareasService] Error eliminando tarea:",e),e;console.log("\u2705 [TareasService] Tarea eliminada exitosamente")}catch(e){throw console.error("\u274C [TareasService] Error en deleteTarea:",e),e}})}calcularProgresoActividad(a){return s(this,null,function*(){try{console.log("\u{1F4CA} [TareasService] Calculando progreso para actividad:",a);let e=yield this.getTareasByActividad(a);if(e.length===0)return console.log("\u{1F4CA} [TareasService] No hay tareas, progreso: 0%"),0;let r=e.filter(o=>o.completada).length,t=Math.round(r/e.length*100);return console.log(`\u{1F4CA} [TareasService] Progreso calculado: ${r}/${e.length} = ${t}%`),t}catch(e){return console.error("\u274C [TareasService] Error calculando progreso:",e),0}})}getEstadisticasTareas(a){return s(this,null,function*(){try{let e=yield this.getTareasByActividad(a),r=e.filter(S=>S.completada).length,t=e.length-r,o=e.length>0?Math.round(r/e.length*100):0;return{total:e.length,completadas:r,pendientes:t,progreso:o}}catch(e){return console.error("\u274C [TareasService] Error obteniendo estad\xEDsticas:",e),{total:0,completadas:0,pendientes:0,progreso:0}}})}reordenarTareas(a,e){return s(this,null,function*(){try{console.log("\u{1F504} [TareasService] Reordenando tareas para actividad:",a);for(let r of e)yield this.supabase.client.from("tareas").update({orden:r.orden,updated_at:new Date().toISOString()}).eq("id",r.id);console.log("\u2705 [TareasService] Tareas reordenadas exitosamente")}catch(r){throw console.error("\u274C [TareasService] Error reordenando tareas:",r),r}})}static{this.\u0275fac=function(e){return new(e||c)(l(h),l(g))}}static{this.\u0275prov=u({token:c,factory:c.\u0275fac,providedIn:"root"})}}return c})();export{m as a};
