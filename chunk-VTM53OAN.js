import{a as b}from"./chunk-WFXXN3GR.js";import{E as a,W as g,ba as h,ga as _,j as s,k as i,q as n}from"./chunk-B6672ACT.js";import{a as m,b as f}from"./chunk-ODN5LVDJ.js";var w=(()=>{class d{constructor(r){this.supabase=r}getKilometros(){return s(this.supabase.client.from("kilometros").select("*").order("frente_id",{ascending:!0}).order("kilometro",{ascending:!0})).pipe(n(r=>r.error?[]:r.data||[]),a(r=>i([])))}getKilometrosByFrente(r){return s(this.supabase.client.from("kilometros").select("*").eq("frente_id",r).order("kilometro",{ascending:!0})).pipe(n(e=>e.error?[]:e.data||[]),a(e=>i([])))}getKilometro(r,e){return s(this.supabase.client.from("kilometros").select("*").eq("frente_id",r).eq("kilometro",e).single()).pipe(n(t=>t.error?null:t.data),a(t=>i(null)))}createKilometro(r){let e=new Date().toISOString(),t=f(m({},r),{created_at:e,updated_at:e});return s(this.supabase.client.from("kilometros").insert([t]).select().single()).pipe(n(o=>o.error?null:o.data),a(o=>i(null)))}updateKilometro(r,e){let t=f(m({},e),{updated_at:new Date().toISOString()});return s(this.supabase.client.from("kilometros").update(t).eq("id",r).select().single()).pipe(n(o=>o.error?null:o.data),a(o=>i(null)))}updateKilometroEstado(r,e,t){return this.getColorByEstado(e).pipe(g(o=>{let c=new Date().toISOString(),l={estado:e,progreso_porcentaje:t,color:o||"#6B7280",fecha_ultima_actualizacion:c,updated_at:c};return s(this.supabase.client.from("kilometros").update(l).eq("id",r).select().single()).pipe(n(p=>p.error?null:p.data),a(p=>i(null)))}),a(o=>i(null)))}deleteKilometro(r){return s(this.supabase.client.from("kilometros").delete().eq("id",r)).pipe(n(e=>!e.error),a(e=>i(!1)))}generateKilometrosForFrente(r,e,t){let o=[],c=new Date().toISOString();for(let l=Math.ceil(e);l<=Math.floor(t);l++)o.push({frente_id:r,kilometro:l,estado:"no_iniciado",color:"#6B7280",progreso_porcentaje:0,actividades_count:0,fecha_ultima_actualizacion:c,created_at:c,updated_at:c});return s(this.supabase.client.from("kilometros").insert(o).select()).pipe(n(l=>l.error?[]:l.data||[]),a(l=>i([])))}getEstadosConfig(){return s(this.supabase.client.from("estados_config").select("*").eq("activo",!0).order("umbral_minimo",{ascending:!0})).pipe(n(r=>r.error?[]:r.data||[]),a(r=>i([])))}getColorByEstado(r){return s(this.supabase.client.from("estados_config").select("color_hex").eq("estado_nombre",r).eq("activo",!0).single()).pipe(n(e=>e.error?null:e.data?.color_hex||null),a(e=>i(null)))}updateEstadoConfig(r,e){return s(this.supabase.client.from("estados_config").update(e).eq("id",r).select().single()).pipe(n(t=>t.error?null:t.data),a(t=>i(null)))}getKilometrosConActividades(r){return s(this.supabase.client.from("kilometros").select(`
          *,
          actividades:actividades!frente_id(
            id,
            nombre,
            descripcion,
            estado,
            progreso_porcentaje,
            kilometro
          )
        `).eq("frente_id",r).order("kilometro",{ascending:!0})).pipe(n(e=>e.error?[]:e.data||[]),a(e=>i([])))}getEstadisticasKilometricas(r){return this.getKilometrosByFrente(r).pipe(n(e=>{let t=e.length,o=e.filter(u=>u.estado==="no_iniciado").length,c=e.filter(u=>u.estado==="en_progreso").length,l=e.filter(u=>u.estado==="completado").length,p=e.filter(u=>u.estado==="con_observaciones").length,k=t>0?e.reduce((u,q)=>u+q.progreso_porcentaje,0)/t:0;return{total:t,noIniciados:o,enProgreso:c,completados:l,conObservaciones:p,progresoPromedio:Math.round(k*100)/100,porcentajeCompletado:t>0?Math.round(l/t*100):0}}))}static{this.\u0275fac=function(e){return new(e||d)(_(b))}}static{this.\u0275prov=h({token:d,factory:d.\u0275fac,providedIn:"root"})}}return d})();export{w as a};
