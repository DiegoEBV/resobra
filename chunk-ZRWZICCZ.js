import{c as w}from"./chunk-ZJYJPMQY.js";import{E,W as O,ba as I,g as D,ga as R,j as d,l as g,q as p}from"./chunk-OYRL5FJJ.js";import{a as A,b as N,i as l}from"./chunk-ODN5LVDJ.js";var B=(()=>{class h{constructor(e){this.supabaseService=e,this.evidenciasSubject=new D([]),this.evidencias$=this.evidenciasSubject.asObservable(),this.uploadProgressSubject=new D(null),this.uploadProgress$=this.uploadProgressSubject.asObservable(),this.ALLOWED_TYPES=["image/jpeg","image/jpg","image/png","image/webp"],this.MAX_FILE_SIZE=10*1024*1024,this.STORAGE_BUCKET="evidencia-fotografica",this.MAX_RETRIES=3,this.RETRY_DELAY=1e3,this.uploadQueue=new Map,this.bucketInitialized=!1,this.maxConcurrentUploads=2,this.activeUploads=0,this.lockTimeout=1e4,this.uploadSemaphore=Promise.resolve(),this.initializeStorageBucket()}initializeStorageBucket(){return l(this,null,function*(){if(!this.bucketInitialized)try{console.log("\u{1F504} Inicializando bucket de evidencia fotogr\xE1fica...");let{data:e,error:r}=yield this.supabaseService.storage.listBuckets();if(r)throw console.error("\u274C Error listando buckets:",r),r;if(e?.some(i=>i.name===this.STORAGE_BUCKET))console.log("\u2705 Bucket de evidencia fotogr\xE1fica ya existe");else{console.log("\u{1F4C1} Creando bucket de evidencia fotogr\xE1fica...");let{error:i}=yield this.supabaseService.storage.createBucket(this.STORAGE_BUCKET,{public:!1,allowedMimeTypes:this.ALLOWED_TYPES,fileSizeLimit:this.MAX_FILE_SIZE});i?console.error("\u274C Error creando bucket:",i):console.log("\u2705 Bucket de evidencia fotogr\xE1fica creado exitosamente")}this.bucketInitialized=!0}catch(e){console.error("\u274C Error inicializando bucket de storage:",e),this.bucketInitialized=!0}})}validateFile(e){return this.ALLOWED_TYPES.includes(e.type)?e.size>this.MAX_FILE_SIZE?{valid:!1,error:`El archivo es demasiado grande. Tama\xF1o m\xE1ximo: ${this.MAX_FILE_SIZE/(1024*1024)}MB`}:{valid:!0}:{valid:!1,error:`Tipo de archivo no permitido. Solo se permiten: ${this.ALLOWED_TYPES.join(", ")}`}}subirEvidencia(e,r,a){return l(this,null,function*(){this.logInfo("subirEvidencia","\u{1F680} INICIANDO SUBIDA DE EVIDENCIA",{fileName:e.name,fileSize:e.size,fileType:e.type,actividadId:r,timestamp:new Date().toISOString()}),this.logDebug("subirEvidencia","\u{1F4CB} Validando archivo",{fileName:e.name});let i=this.validateFile(e);if(!i.valid){let o=new Error(`Archivo inv\xE1lido: ${i.error}`);throw this.logError("subirEvidencia","\u274C ERROR DE VALIDACI\xD3N",{fileName:e.name,validationError:i.error}),o}this.logDebug("subirEvidencia","\u2705 Archivo validado correctamente",{fileName:e.name}),this.logDebug("subirEvidencia","\u{1F3AB} Obteniendo slot de subida",{fileName:e.name});let t=yield this.acquireUploadSlot(e.name);this.logDebug("subirEvidencia","\u2705 Slot obtenido",{fileName:e.name,slotId:t});try{this.updateProgress(e.name,0,"Iniciando subida..."),this.logDebug("subirEvidencia","\u{1F4CA} Progreso actualizado: 0%",{fileName:e.name});let o=yield this.performUploadWithRetry(e,r,a,t);return this.logInfo("subirEvidencia","\u{1F389} EVIDENCIA SUBIDA EXITOSAMENTE",{fileName:e.name,actividadId:r,evidenciaId:o.id,urlImagen:o.url_imagen,timestamp:new Date().toISOString()}),o}finally{this.logDebug("subirEvidencia","\u{1F513} Liberando slot de subida",{fileName:e.name,slotId:t}),this.releaseUploadSlot(t)}})}acquireUploadSlot(e){return l(this,null,function*(){return this.logDebug("acquireUploadSlot","Esperando slot disponible",{uploadId:e,activeUploads:this.activeUploads}),new Promise((r,a)=>{let i=setTimeout(()=>{this.logError("acquireUploadSlot","Timeout esperando slot",{uploadId:e,timeout:this.lockTimeout}),a(new Error("Timeout esperando slot de subida disponible"))},this.lockTimeout),t=()=>{this.activeUploads<this.maxConcurrentUploads?(this.activeUploads++,clearTimeout(i),this.logDebug("acquireUploadSlot","Slot adquirido",{uploadId:e,activeUploads:this.activeUploads}),r(e)):setTimeout(t,100)};t()})})}releaseUploadSlot(e){this.activeUploads=Math.max(0,this.activeUploads-1),this.logDebug("releaseUploadSlot","Slot liberado",{slotId:e,activeUploads:this.activeUploads})}updateProgress(e,r,a){let i={loaded:r,total:100,percentage:r};this.uploadProgressSubject.next(i),this.logDebug("updateProgress",a,{fileName:e,percentage:r})}performUploadWithRetry(e,r,a,i,t=3){return l(this,null,function*(){let o;this.logInfo("performUploadWithRetry","\u{1F504} INICIANDO PROCESO DE SUBIDA CON REINTENTOS",{fileName:e.name,actividadId:r,slotId:i,maxRetries:t,timestamp:new Date().toISOString()});for(let s=1;s<=t;s++)try{this.logInfo("performUploadWithRetry",`\u{1F3AF} INTENTO ${s}/${t}`,{fileName:e.name,actividadId:r,slotId:i,attempt:s});let c=yield this.performUpload(e,r,a,i);return this.logInfo("performUploadWithRetry","\u2705 UPLOAD EXITOSO EN INTENTO",{fileName:e.name,actividadId:r,slotId:i,attempt:s,evidenciaId:c.id,urlImagen:c.url_imagen,timestamp:new Date().toISOString()}),c}catch(c){if(o=c,this.logError("performUploadWithRetry",`\u274C INTENTO ${s} FALL\xD3`,{fileName:e.name,actividadId:r,slotId:i,attempt:s,errorName:o.name,errorMessage:o.message,errorStack:o.stack}),s<t){let n=Math.pow(2,s)*1e3;this.logInfo("performUploadWithRetry",`\u23F3 ESPERANDO ${n}ms ANTES DEL SIGUIENTE INTENTO`,{fileName:e.name,slotId:i,delay:n,nextAttempt:s+1}),yield new Promise(m=>setTimeout(m,n))}}throw this.logError("performUploadWithRetry","\u{1F4A5} TODOS LOS INTENTOS FALLARON",{fileName:e.name,actividadId:r,slotId:i,maxRetries:t,finalError:o.message,timestamp:new Date().toISOString()}),o})}performUpload(e,r,a,i){return l(this,null,function*(){this.logInfo("performUpload","\u{1F527} INICIANDO PERFORM UPLOAD",{fileName:e.name,fileSize:e.size,fileType:e.type,actividadId:r,slotId:i,timestamp:new Date().toISOString()});try{this.logDebug("performUpload","\u{1FAA3} Verificando bucket existe",{slotId:i}),yield this.ensureBucketExists(),this.logDebug("performUpload","\u2705 Bucket verificado",{slotId:i});let t=Date.now(),o=Math.random().toString(36).substring(2,15),s=e.name.split(".").pop(),c=`${r}_${t}_${o}.${s}`,n=`evidencias/${c}`;this.logInfo("performUpload","\u{1F4C1} ARCHIVO PREPARADO PARA SUBIDA",{originalName:e.name,generatedFileName:c,filePath:n,fileSize:e.size,slotId:i}),this.updateProgress(e.name,25,"Subiendo archivo..."),this.logDebug("performUpload","\u{1F4CA} Progreso actualizado: 25%",{fileName:e.name,slotId:i}),this.logInfo("performUpload","\u2601\uFE0F SUBIENDO ARCHIVO A SUPABASE STORAGE",{filePath:n,bucketName:"evidencia-fotografica",slotId:i});let{data:m,error:f}=yield this.supabaseService.client.storage.from("evidencia-fotografica").upload(n,e,{cacheControl:"3600",upsert:!1});if(f)throw this.logError("performUpload","\u274C ERROR SUBIENDO ARCHIVO A STORAGE",{slotId:i,filePath:n,errorMessage:f.message,errorDetails:f}),new Error(`Error subiendo archivo: ${f.message}`);this.logInfo("performUpload","\u2705 ARCHIVO SUBIDO A STORAGE EXITOSAMENTE",{slotId:i,filePath:n,uploadPath:m?.path,uploadId:m?.id}),this.updateProgress(e.name,75,"Guardando en base de datos..."),this.logDebug("performUpload","\u{1F4CA} Progreso actualizado: 75%",{fileName:e.name,slotId:i}),this.logDebug("performUpload","\u{1F517} Obteniendo URL p\xFAblica",{slotId:i,filePath:n});let{data:_}=this.supabaseService.client.storage.from("evidencia-fotografica").getPublicUrl(n),S=_.publicUrl;this.logInfo("performUpload","\u2705 URL P\xDABLICA OBTENIDA",{slotId:i,publicUrl:S});let v=yield this.supabaseService.getCurrentUserId();this.logDebug("performUpload","\u{1F464} Usuario actual obtenido",{slotId:i,currentUserId:v});let b={actividad_id:r,url_imagen:S,descripcion:a||null,subido_por:v,nombre_archivo:e.name,tama\u00F1o_archivo:e.size,tipo_archivo:e.type};this.logInfo("performUpload","\u{1F4BE} GUARDANDO EN BASE DE DATOS",{slotId:i,evidenciaData:N(A({},b),{subido_por:v?"USER_ID_SET":"NO_USER_ID"})});let{data:U,error:u}=yield this.supabaseService.client.from("evidencia_fotografica").insert(b).select().single();if(u){this.logError("performUpload","\u274C ERROR GUARDANDO EN BASE DE DATOS",{slotId:i,evidenciaData:b,errorCode:u.code,errorMessage:u.message,errorDetails:u,errorHint:u.hint}),this.logInfo("performUpload","\u{1F9F9} LIMPIANDO ARCHIVO DESPU\xC9S DE ERROR EN BD",{slotId:i,filePath:n});try{yield this.supabaseService.client.storage.from("evidencia-fotografica").remove([n]),this.logDebug("performUpload","\u2705 Archivo limpiado exitosamente",{slotId:i,filePath:n})}catch{this.logError("performUpload","\u274C Error limpiando archivo",{slotId:i,filePath:n})}throw new Error(`Error guardando en base de datos: ${u.message}`)}return this.updateProgress(e.name,100,"Completado"),this.logDebug("performUpload","\u{1F4CA} Progreso actualizado: 100%",{fileName:e.name,slotId:i}),this.logInfo("performUpload","\u{1F389} EVIDENCIA GUARDADA EXITOSAMENTE",{slotId:i,evidenciaId:U.id,publicUrl:S,fileName:e.name,actividadId:r,timestamp:new Date().toISOString()}),U}catch(t){let o=t.message;throw this.logError("performUpload","\u{1F4A5} ERROR CR\xCDTICO EN PERFORM UPLOAD",{slotId:i,fileName:e.name,actividadId:r,errorName:t.name,errorMessage:o,errorStack:t.stack,timestamp:new Date().toISOString()}),this.updateProgress(e.name,0,"Error en subida"),t}})}ensureBucketExists(){return l(this,null,function*(){this.bucketInitialized||(yield this.initializeStorageBucket())})}getErrorMessage(e){return e?.message?.includes("Bucket not found")?new Error("El almacenamiento de evidencias no est\xE1 configurado correctamente. Por favor, contacta al administrador."):e?.message?.includes("not authenticated")?new Error("Debes iniciar sesi\xF3n para subir evidencias."):e?.message?.includes("file size")?new Error("El archivo es demasiado grande. Tama\xF1o m\xE1ximo permitido: 10MB."):new Error(e?.message||"Error desconocido al subir la evidencia.")}obtenerEvidenciasPorActividad(e){return console.log("\u{1F50D} INICIANDO CONSULTA DE EVIDENCIAS",{actividadId:e,timestamp:new Date().toISOString()}),d(this.supabaseService.db.from("evidencia_fotografica").select("*").eq("actividad_id",e).order("fecha_subida",{ascending:!1})).pipe(p(({data:r,error:a})=>{if(a)throw console.error("\u274C ERROR EN CONSULTA SUPABASE",{actividadId:e,errorName:a.name,errorMessage:a.message,errorDetails:a.details,errorHint:a.hint,errorCode:a.code,timestamp:new Date().toISOString()}),a;let i=r;return console.log("\u2705 CONSULTA SUPABASE EXITOSA",{actividadId:e,cantidadEvidencias:i?.length||0,evidenciasRaw:i,timestamp:new Date().toISOString()}),i&&i.length>0?i.forEach((t,o)=>{console.log(`\u{1F4F8} Evidencia encontrada ${o+1}:`,{id:t.id,actividad_id:t.actividad_id,nombre_archivo:t.nombre_archivo,url_imagen:t.url_imagen,descripcion:t.descripcion,fecha_subida:t.fecha_subida,subido_por:t.subido_por,tama\u00F1o_archivo:t.tama\u00F1o_archivo,tipo_archivo:t.tipo_archivo,created_at:t.created_at,updated_at:t.updated_at})}):console.log("\u2139\uFE0F NO SE ENCONTRARON EVIDENCIAS EN LA CONSULTA",{actividadId:e,dataResponse:r,timestamp:new Date().toISOString()}),this.evidenciasSubject.next(i),i}),E(r=>(console.error("\u274C ERROR PROCESANDO EVIDENCIAS",{actividadId:e,errorName:r?.name,errorMessage:r?.message,errorStack:r?.stack,timestamp:new Date().toISOString()}),g(()=>r))))}actualizarDescripcion(e,r){return d(this.supabaseService.db.from("evidencia_fotografica").update({descripcion:r,updated_at:new Date().toISOString()}).eq("id",e).select().single()).pipe(p(({data:a,error:i})=>{if(i)throw i;return a}),E(a=>(console.error("Error actualizando descripci\xF3n:",a),g(()=>a))))}eliminarEvidencia(e){return this.logInfo("eliminarEvidencia","Iniciando eliminaci\xF3n de evidencia",{evidenciaId:e}),d(this.supabaseService.db.from("evidencia_fotografica").select("url_imagen, subido_por, nombre_archivo").eq("id",e).single()).pipe(O(({data:r,error:a})=>{if(a)throw this.logError("eliminarEvidencia","Error obteniendo datos de evidencia",{error:a,evidenciaId:e}),a;let i=r;this.logInfo("eliminarEvidencia","Datos de evidencia obtenidos",{evidencia:i});let t;try{let s=new URL(i.url_imagen).pathname.split("/").filter(c=>c.length>0);if(s.length>=2){let c=s.findIndex(n=>n==="evidencia-fotografica");if(c>=0&&c<s.length-2){let n=s[c+1],m=s[c+2];t=`${n}/${m}`}else t=`${s[s.length-2]}/${s[s.length-1]}`}else throw new Error("URL de imagen inv\xE1lida")}catch(o){if(this.logError("eliminarEvidencia","Error extrayendo path del archivo",{urlError:o,url:i.url_imagen}),i.nombre_archivo&&i.subido_por)t=`${i.subido_por}/${i.nombre_archivo}`;else throw new Error("No se pudo determinar el path del archivo")}return this.logInfo("eliminarEvidencia","Path del archivo extra\xEDdo",{filePath:t}),d(this.supabaseService.storage.from(this.STORAGE_BUCKET).remove([t])).pipe(O(({data:o,error:s})=>(s?this.logError("eliminarEvidencia","Error eliminando archivo del storage",{storageError:s,filePath:t}):this.logInfo("eliminarEvidencia","Archivo eliminado del storage exitosamente",{storageData:o,filePath:t}),d(this.supabaseService.db.from("evidencia_fotografica").delete().eq("id",e)))))}),p(({data:r,error:a})=>{if(a)throw this.logError("eliminarEvidencia","Error eliminando registro de BD",{error:a,evidenciaId:e}),a;this.logInfo("eliminarEvidencia","Evidencia eliminada exitosamente",{evidenciaId:e,data:r});let t=this.evidenciasSubject.value.filter(o=>o.id!==e);return this.evidenciasSubject.next(t),!0}),E(r=>(this.logError("eliminarEvidencia","Error general eliminando evidencia fotogr\xE1fica",{error:r,evidenciaId:e}),g(()=>r))))}actualizarEvidencia(e,r){return d(this.supabaseService.db.from("evidencia_fotografica").update(r).eq("id",e).select().single()).pipe(p(({data:a,error:i})=>{if(i)throw i;return a}),E(a=>(console.error("Error al actualizar evidencia:",a),g(()=>a))))}obtenerEstadisticasEvidencia(e){return this.obtenerEvidenciasPorActividad(e).pipe(p(r=>({total:r.length,conDescripcion:r.filter(a=>a.descripcion&&a.descripcion.trim().length>0).length,sinDescripcion:r.filter(a=>!a.descripcion||a.descripcion.trim().length===0).length})))}limpiarEstado(){this.evidenciasSubject.next([]),this.uploadProgressSubject.next(null)}obtenerThumbnailUrl(e,r=200,a=200){return e}logDebug(e,r,a){let t={timestamp:new Date().toISOString(),service:"EvidenciaFotograficaService",method:e,level:"DEBUG",message:r,context:a||{}};console.debug("\u{1F50D} [EvidenciaFotografica]",t)}logError(e,r,a){let t={timestamp:new Date().toISOString(),service:"EvidenciaFotograficaService",method:e,level:"ERROR",message:r,context:a||{},stack:a?.error?.stack||new Error().stack};console.error("\u274C [EvidenciaFotografica]",t)}logInfo(e,r,a){let t={timestamp:new Date().toISOString(),service:"EvidenciaFotograficaService",method:e,level:"INFO",message:r,context:a||{}};console.info("\u2139\uFE0F [EvidenciaFotografica]",t)}getUploadStats(){return{activeUploads:this.activeUploads,queueSize:this.uploadQueue.size,maxConcurrent:this.maxConcurrentUploads}}static{this.\u0275fac=function(r){return new(r||h)(R(w))}}static{this.\u0275prov=I({token:h,factory:h.\u0275fac,providedIn:"root"})}}return h})();export{B as a};
