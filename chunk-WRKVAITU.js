import{a as Le}from"./chunk-VTM53OAN.js";import{a as I,b as we}from"./chunk-GJB63F4V.js";import{d as Ke,f as Me}from"./chunk-ZRWTJLBH.js";import"./chunk-MS4AQ6UA.js";import{a as Te,b as Oe}from"./chunk-DMZJ7K26.js";import{c as Ie}from"./chunk-7BCONPA6.js";import{b as ye}from"./chunk-ZOXEDHNH.js";import{d as Ce}from"./chunk-ZBUPANVT.js";import"./chunk-F5X5MWHG.js";import{a as $e}from"./chunk-6YTEXIFY.js";import{a as ke,b as Pe}from"./chunk-WI2E4B7N.js";import{a as Fe}from"./chunk-6DYBOFBA.js";import{a as Ee,b as Se}from"./chunk-MVE6Y23E.js";import"./chunk-GOBT7UBB.js";import"./chunk-SGYCFQGT.js";import"./chunk-2GVF4P32.js";import{a as De}from"./chunk-WFXXN3GR.js";import{g as ae}from"./chunk-YMTLAEZG.js";import"./chunk-G7YPFBNB.js";import{a as ne,b as se,c as le,d as de,f as ce,h as me}from"./chunk-SNSQLCH6.js";import"./chunk-3RK6DDJD.js";import{C as ge,F as he,G as ue,y as pe}from"./chunk-UJ3DDJ5Q.js";import{i as te,j as ie,o as oe,p as re,sa as fe,ua as ve,va as xe,wa as be,xa as _e}from"./chunk-4WMI5X77.js";import{Db as f,E as M,Eb as B,Fb as Y,Nb as i,Ob as t,Pb as _,Qb as Z,Rb as G,Tb as V,Xb as w,Yb as C,ba as H,db as l,f as q,ga as R,hc as o,ib as F,ic as D,j as K,jc as b,k,kc as W,lc as J,mc as Q,nc as U,o as N,oc as ee,pa as z,pb as X,q as P,qa as j,uc as T,vb as S,wc as O}from"./chunk-B6672ACT.js";import"./chunk-X5YLR3NI.js";import{a as L,b as A,i as u}from"./chunk-ODN5LVDJ.js";var Ae=(()=>{class d{constructor(e){this.supabase=e}getFrente(){return K(this.supabase.client.from("frentes").select(`
          id,
          nombre,
          descripcion,
          ubicacion_lat,
          ubicacion_lng,
          estado,
          obra_id,
          supervisor_id,
          fecha_inicio,
          fecha_fin_estimada,
          progreso_general,
          presupuesto_asignado,
          presupuesto_utilizado,
          km_inicial,
          km_final,
          coordenadas_inicio,
          coordenadas_fin,
          coordenadas_intermedias,
          coordenadas_gps,
          estado_general,
          created_at,
          updated_at
        `).order("nombre")).pipe(P(e=>e.error?[]:e.data||[]),M(e=>k([])))}getFrenteById(e){return K(this.supabase.client.from("frentes").select(`
          id,
          nombre,
          descripcion,
          ubicacion_lat,
          ubicacion_lng,
          estado,
          obra_id,
          supervisor_id,
          fecha_inicio,
          fecha_fin_estimada,
          progreso_general,
          presupuesto_asignado,
          presupuesto_utilizado,
          km_inicial,
          km_final,
          coordenadas_inicio,
          coordenadas_fin,
          coordenadas_intermedias,
          coordenadas_gps,
          estado_general,
          created_at,
          updated_at
        `).eq("id",e).single()).pipe(P(a=>a.error?null:a.data),M(a=>k(null)))}createFrente(e){return K(this.supabase.client.from("frentes").insert(A(L({},e),{created_at:new Date().toISOString(),updated_at:new Date().toISOString()})).select().single()).pipe(P(a=>a.error?null:a.data),M(a=>k(null)))}updateFrente(e,a){return K(this.supabase.client.from("frentes").update(A(L({},a),{updated_at:new Date().toISOString()})).eq("id",e).select().single()).pipe(P(r=>r.error?null:r.data),M(r=>k(null)))}deleteFrente(e){return K(this.supabase.client.from("frentes").delete().eq("id",e)).pipe(P(a=>!a.error),M(a=>k(!1)))}static{this.\u0275fac=function(a){return new(a||d)(R(De))}}static{this.\u0275prov=H({token:d,factory:d.\u0275fac,providedIn:"root"})}}return d})();function Be(d,x){if(d&1&&(i(0,"mat-option",14),o(1),t()),d&2){let e=x.$implicit;f("value",e.id),l(),b(" ",e.nombre," ")}}function Ve(d,x){d&1&&(i(0,"div",15),_(1,"mat-progress-bar",16),i(2,"p"),o(3,"Cargando m\xE9tricas kilom\xE9tricas..."),t()())}function We(d,x){if(d&1&&(i(0,"div",46)(1,"mat-icon",65),o(2,"warning"),t(),i(3,"span",66),o(4),t()()),d&2){let e=C(2);l(4),b("",e.metricas.alertasKilometricas," kil\xF3metros con progreso bajo")}}function qe(d,x){if(d&1&&(i(0,"div",34),_(1,"div",67),i(2,"span",68),o(3),t()()),d&2){let e=x.$implicit;l(),B("background-color",e.color),l(2),J("",e.estado,": ",e.cantidad," (",e.porcentaje,"%)")}}function Ne(d,x){if(d&1){let e=V();i(0,"div",69)(1,"div",70)(2,"span",71),o(3),t()(),i(4,"div",70)(5,"span",72),o(6),t()(),i(7,"div",70)(8,"span",73),o(9),t()(),i(10,"div",70)(11,"div",74),_(12,"mat-progress-bar",75),i(13,"span",76),o(14),t()()(),i(15,"div",70)(16,"span",77)(17,"mat-icon"),o(18,"assignment"),t(),o(19),t()(),i(20,"div",70)(21,"button",78),w("click",function(){let r=z(e).$implicit,c=C(2);return j(c.viewKilometroDetails(r.kilometro))}),i(22,"mat-icon"),o(23,"visibility"),t()()()()}if(d&2){let e=x.$implicit,a=C(2);l(3),b("KM ",e.kilometro,""),l(3),D(e.frente),l(2),B("background-color",a.getEstadoColor(e.estado))("color","white"),l(),b(" ",a.getEstadoLabel(e.estado)," "),l(3),f("value",e.progreso)("color",a.getProgressColor(e.progreso)),l(2),b("",e.progreso,"%"),l(5),b(" ",e.actividades," ")}}function He(d,x){d&1&&(i(0,"div",79)(1,"mat-icon"),o(2,"straighten"),t(),i(3,"p"),o(4,"No hay kil\xF3metros registrados"),t(),i(5,"p",80),o(6,"Los kil\xF3metros aparecer\xE1n aqu\xED cuando se registren en los frentes"),t()())}function Re(d,x){if(d&1){let e=V();Z(0),i(1,"div",86)(2,"mat-icon"),o(3,"warning"),t()(),i(4,"div",87)(5,"div",88),o(6),t(),i(7,"div",89),o(8),t()(),i(9,"div",90)(10,"button",91),w("click",function(){z(e);let r=C().$implicit,c=C(3);return j(c.viewKilometroDetails(r.kilometro))}),i(11,"mat-icon"),o(12,"visibility"),t(),o(13," Ver Detalles "),t()(),G()}if(d&2){let e=C().$implicit;l(6),b("Kil\xF3metro ",e.kilometro," - Progreso Bajo"),l(2),W(" Solo ",e.progreso,"% completado con ",e.actividades," actividades registradas ")}}function Xe(d,x){if(d&1&&(i(0,"div",84),S(1,Re,14,3,"ng-container",85),t()),d&2){let e=x.$implicit;l(),f("ngIf",e.estado==="en_progreso"&&e.progreso<30)}}function Ye(d,x){if(d&1&&(i(0,"mat-card",81)(1,"mat-card-header")(2,"mat-card-title")(3,"mat-icon",65),o(4,"warning"),t(),o(5," Alertas y Recomendaciones "),t(),i(6,"mat-card-subtitle"),o(7,"Kil\xF3metros que requieren atenci\xF3n"),t()(),i(8,"mat-card-content")(9,"div",82),S(10,Xe,2,1,"div",83),t()()()),d&2){let e=C(2);l(10),f("ngForOf",e.progresoKilometrico)}}function Ze(d,x){if(d&1&&(i(0,"div",17)(1,"div",18)(2,"mat-card",19)(3,"mat-card-content")(4,"div",20)(5,"mat-icon"),o(6,"straighten"),t()(),i(7,"div",21)(8,"div",22),o(9),t(),i(10,"div",23),o(11,"Total Kil\xF3metros"),t()()()(),i(12,"mat-card",24)(13,"mat-card-content")(14,"div",20)(15,"mat-icon"),o(16,"check_circle"),t()(),i(17,"div",21)(18,"div",22),o(19),t(),i(20,"div",23),o(21,"Completados"),t(),i(22,"div",25),o(23),T(24,"number"),t()()()(),i(25,"mat-card",26)(26,"mat-card-content")(27,"div",20)(28,"mat-icon"),o(29,"trending_up"),t()(),i(30,"div",21)(31,"div",22),o(32),t(),i(33,"div",23),o(34,"En Progreso"),t(),i(35,"div",25),o(36),T(37,"number"),t()()()(),i(38,"mat-card",27)(39,"mat-card-content")(40,"div",20)(41,"mat-icon"),o(42,"schedule"),t()(),i(43,"div",21)(44,"div",22),o(45),t(),i(46,"div",23),o(47,"Pendientes"),t(),i(48,"div",25),o(49),T(50,"number"),t()()()()(),i(51,"mat-card",28)(52,"mat-card-header")(53,"mat-card-title")(54,"mat-icon"),o(55,"map"),t(),o(56," Vista Kilom\xE9trica del Mapa "),t(),i(57,"mat-card-subtitle"),o(58,"Visualizaci\xF3n de progreso por kil\xF3metro en el mapa"),t()(),i(59,"mat-card-content")(60,"div",29),_(61,"div",30),i(62,"div",31)(63,"div",32)(64,"mat-icon"),o(65,"palette"),t(),o(66," Leyenda de Estados "),t(),i(67,"div",33)(68,"div",34),_(69,"div",35),i(70,"span"),o(71,"Completado (100%)"),t()(),i(72,"div",34),_(73,"div",36),i(74,"span"),o(75,"En Progreso (1-99%)"),t()(),i(76,"div",34),_(77,"div",37),i(78,"span"),o(79,"Pendiente (0%)"),t()()()()()()(),i(80,"mat-card",38)(81,"mat-card-header")(82,"mat-card-title")(83,"mat-icon"),o(84,"analytics"),t(),o(85," Progreso General "),t(),i(86,"mat-card-subtitle"),o(87,"Avance promedio de todos los kil\xF3metros"),t()(),i(88,"mat-card-content")(89,"div",39)(90,"div",40)(91,"div",41),o(92),t(),i(93,"div",42),o(94),t()(),i(95,"div",43),_(96,"mat-progress-bar",44),t()(),i(97,"div",45)(98,"div",46)(99,"mat-icon"),o(100,"construction"),t(),i(101,"span",47),o(102),t()(),S(103,We,5,1,"div",48),t()()(),i(104,"div",49)(105,"mat-card",50)(106,"mat-card-header")(107,"mat-card-title")(108,"mat-icon"),o(109,"pie_chart"),t(),o(110," Distribuci\xF3n por Estados "),t(),i(111,"mat-card-subtitle"),o(112,"Kil\xF3metros agrupados por estado actual"),t()(),i(113,"mat-card-content")(114,"div",51),_(115,"canvas",52),t(),i(116,"div",53),S(117,qe,4,5,"div",54),t()()(),i(118,"mat-card",50)(119,"mat-card-header")(120,"mat-card-title")(121,"mat-icon"),o(122,"bar_chart"),t(),o(123," Progreso por Kil\xF3metro "),t(),i(124,"mat-card-subtitle"),o(125,"Porcentaje de avance de cada kil\xF3metro"),t()(),i(126,"mat-card-content")(127,"div",51),_(128,"canvas",55),t()()(),i(129,"mat-card",56)(130,"mat-card-header")(131,"mat-card-title")(132,"mat-icon"),o(133,"show_chart"),t(),o(134," Tendencia de Progreso "),t(),i(135,"mat-card-subtitle"),o(136,"Evoluci\xF3n del progreso promedio en los \xFAltimos 7 d\xEDas"),t()(),i(137,"mat-card-content")(138,"div",51),_(139,"canvas",57),t()()()(),i(140,"mat-card",58)(141,"mat-card-header")(142,"mat-card-title")(143,"mat-icon"),o(144,"table_chart"),t(),o(145," Detalle por Kil\xF3metro "),t(),i(146,"mat-card-subtitle"),o(147,"Informaci\xF3n detallada de cada kil\xF3metro"),t()(),i(148,"mat-card-content")(149,"div",59)(150,"div",60)(151,"div",61),o(152,"Kil\xF3metro"),t(),i(153,"div",61),o(154,"Frente"),t(),i(155,"div",61),o(156,"Estado"),t(),i(157,"div",61),o(158,"Progreso"),t(),i(159,"div",61),o(160,"Actividades"),t(),i(161,"div",61),o(162,"Acciones"),t()(),S(163,Ne,24,11,"div",62)(164,He,7,0,"div",63),t()()(),S(165,Ye,11,1,"mat-card",64),t()),d&2){let e=C();l(9),D(e.metricas.totalKilometros),l(10),D(e.metricas.kilometrosCompletados),l(4),b("",e.metricas.totalKilometros>0?O(24,18,e.metricas.kilometrosCompletados/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),l(9),D(e.metricas.kilometrosEnProgreso),l(4),b("",e.metricas.totalKilometros>0?O(37,21,e.metricas.kilometrosEnProgreso/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),l(9),D(e.metricas.kilometrosPendientes),l(4),b("",e.metricas.totalKilometros>0?O(50,24,e.metricas.kilometrosPendientes/e.metricas.totalKilometros*100,"1.0-0"):0,"%"),l(43),b("",e.metricas.progresoPromedio,"%"),l(2),W(" ",e.metricas.actividadesCompletadas," de ",e.metricas.actividadesTotales," actividades completadas "),l(2),f("value",e.metricas.progresoPromedio)("color",e.getProgressColor(e.metricas.progresoPromedio)),l(6),b("",e.metricas.frentesActivos," frentes activos"),l(),f("ngIf",e.metricas.alertasKilometricas>0),l(14),f("ngForOf",e.estadisticasPorEstado),l(46),f("ngForOf",e.progresoKilometrico),l(),f("ngIf",e.progresoKilometrico.length===0),l(),f("ngIf",e.metricas.alertasKilometricas>0)}}I.register(...we);var kt=(()=>{class d{constructor(e,a,r,c){this.kilometrosService=e,this.frentesService=a,this.actividadesService=r,this.tareasService=c,this.destroy$=new q,this.isLoading=!0,this.metricas={totalKilometros:0,kilometrosCompletados:0,kilometrosEnProgreso:0,kilometrosPendientes:0,progresoPromedio:0,actividadesTotales:0,actividadesCompletadas:0,frentesActivos:0,alertasKilometricas:0},this.estadisticasPorEstado=[],this.progresoKilometrico=[],this.frenteSeleccionado="todos",this.frentes=[],this.estadosChart=null,this.progresoChart=null,this.tendenciaChart=null,this.tendenciaProgreso=[]}ngOnInit(){console.log("\u{1F680} [DashboardKilometrico] ngOnInit ejecutado - iniciando carga de datos"),this.loadDashboardData()}ngAfterViewInit(){setTimeout(()=>{this.initializeKilometricMap()},500)}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete(),this.destroyCharts()}initializeKilometricMap(){console.log("\u{1F5FA}\uFE0F [DashboardKilometrico] Inicializando mapa kilom\xE9trico visual");let e=document.getElementById("kilometricMap");if(!e){console.error("\u274C [DashboardKilometrico] Contenedor del mapa no encontrado");return}e.innerHTML="",this.createKilometricVisualization(e)}createKilometricVisualization(e){if(console.log("\u{1F3A8} [DashboardKilometrico] Creando visualizaci\xF3n kilom\xE9trica"),this.progresoKilometrico.length===0){e.innerHTML=`
        <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; color: #666;">
          <mat-icon style="font-size: 48px; margin-bottom: 16px;">straighten</mat-icon>
          <p>No hay kil\xF3metros para mostrar</p>
          <p style="font-size: 14px; opacity: 0.7;">Los kil\xF3metros aparecer\xE1n aqu\xED cuando se registren actividades</p>
        </div>
      `;return}let a=document.createElement("div");a.style.cssText=`
      position: relative;
      width: 100%;
      height: 100%;
      padding: 20px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    `;let r=e.clientWidth-40,c=30,n=10,p=this.progresoKilometrico.length;[...this.progresoKilometrico].sort((s,m)=>s.kilometro-m.kilometro).forEach((s,m)=>{let g=this.createKilometricSegment(s,m,r,c);a.appendChild(g)}),e.appendChild(a),console.log("\u2705 [DashboardKilometrico] Visualizaci\xF3n kilom\xE9trica creada con",p,"segmentos")}createKilometricSegment(e,a,r,c){let n=document.createElement("div"),p="pendiente";e.progreso>=100?p="completado":e.progreso>0&&(p="en-progreso");let y=Math.max(r*.8,200),s=a*(c+10);n.className=`km-segment ${p}`,n.style.cssText=`
      position: absolute;
      top: ${s}px;
      left: 50%;
      transform: translateX(-50%);
      width: ${y}px;
      height: ${c}px;
      border-radius: 15px;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 16px;
      color: white;
      font-weight: 600;
      font-size: 14px;
      text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    `,n.innerHTML=`
      <div style="display: flex; align-items: center; gap: 8px;">
        <span>KM ${e.kilometro}</span>
        <span style="font-size: 12px; opacity: 0.9;">${e.frente}</span>
      </div>
      <div style="display: flex; align-items: center; gap: 8px;">
        <span>${e.progreso}%</span>
        <span style="font-size: 12px; opacity: 0.9;">${e.actividades} act.</span>
      </div>
    `;let m=document.createElement("div");m.style.cssText=`
      position: absolute;
      bottom: 2px;
      left: 2px;
      right: 2px;
      height: 4px;
      background: rgba(255,255,255,0.3);
      border-radius: 2px;
      overflow: hidden;
    `;let g=document.createElement("div");return g.style.cssText=`
      height: 100%;
      width: ${e.progreso}%;
      background: rgba(255,255,255,0.8);
      border-radius: 2px;
      transition: width 0.5s ease;
    `,m.appendChild(g),n.appendChild(m),n.addEventListener("mouseenter",v=>{n.style.transform="translateX(-50%) translateY(-2px)",n.style.boxShadow="0 4px 12px rgba(0,0,0,0.3)",this.showKilometricTooltip(v,e)}),n.addEventListener("mouseleave",()=>{n.style.transform="translateX(-50%)",n.style.boxShadow="0 2px 4px rgba(0,0,0,0.2)",this.hideKilometricTooltip()}),n.addEventListener("click",()=>{this.viewKilometroDetails(e.kilometro)}),n}showKilometricTooltip(e,a){let r=document.createElement("div");r.className="km-tooltip",r.innerHTML=`
      <div><strong>Kil\xF3metro ${a.kilometro}</strong></div>
      <div>Frente: ${a.frente}</div>
      <div>Progreso: ${a.progreso}%</div>
      <div>Actividades: ${a.actividades}</div>
      <div>Estado: ${this.getEstadoLabel(a.estado)}</div>
    `,document.body.appendChild(r);let c=p=>{r.style.left=p.clientX+10+"px",r.style.top=p.clientY-10+"px"};c(e);let n=p=>c(p);document.addEventListener("mousemove",n),r.addEventListener("remove",()=>{document.removeEventListener("mousemove",n)})}hideKilometricTooltip(){let e=document.querySelector(".km-tooltip");e&&(e.dispatchEvent(new Event("remove")),e.remove())}loadDashboardData(){return u(this,null,function*(){try{console.log("\u{1F504} [Dashboard] Iniciando carga de datos del dashboard kilom\xE9trico"),this.isLoading=!0,yield Promise.all([this.loadFrente(),this.loadMetricasKilometricas(),this.loadEstadisticasPorEstado(),this.loadProgresoKilometrico(),this.loadTendenciaProgreso()]),setTimeout(()=>{this.createCharts(),this.initializeKilometricMap()},100)}catch{}finally{this.isLoading=!1}})}loadFrente(){return u(this,null,function*(){try{console.log("\u{1F504} [Dashboard] Cargando frentes..."),this.frentes=(yield N(this.frentesService.getFrente()))||[],console.log("\u2705 [Dashboard] Frentes cargados:",this.frentes.length,this.frentes)}catch(e){console.error("\u274C [Dashboard] Error loading frentes:",e),this.frentes=[]}})}loadMetricasKilometricas(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando m\xE9tricas kilom\xE9tricas basadas en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(r=>r.frente_id===this.frenteSeleccionado);try{let r=(yield this.actividadesService.getActividades())||[],c=a.map(s=>u(this,null,function*(){let m=r.filter(E=>E.kilometro===s.kilometro);if(m.length===0)return{progreso:0,estado:"pendiente"};let g=yield Promise.all(m.map(E=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(E.id)).progreso}catch{return E.progreso_porcentaje||0}}))),v=g.length>0?g.reduce((E,$)=>E+$,0)/g.length:0,h="pendiente";return v===0?h="pendiente":v>=100?h="completado":h="en_progreso",{progreso:v,estado:h}})),n=yield Promise.all(c);if(this.metricas.totalKilometros=a.length,this.metricas.kilometrosCompletados=n.filter(s=>s.estado==="completado").length,this.metricas.kilometrosEnProgreso=n.filter(s=>s.estado==="en_progreso").length,this.metricas.kilometrosPendientes=n.filter(s=>s.estado==="pendiente").length,n.length>0){let s=n.reduce((m,g)=>m+g.progreso,0);this.metricas.progresoPromedio=Math.round(s/n.length)}let p=r.filter(s=>s.kilometro!==null&&s.kilometro!==void 0);this.metricas.actividadesTotales=p.length,this.metricas.actividadesCompletadas=p.filter(s=>s.estado==="finalizado").length;let y=new Set(a.map(s=>s.frente_id));this.metricas.frentesActivos=y.size,this.metricas.alertasKilometricas=n.filter(s=>s.estado==="en_progreso"&&s.progreso<30).length,console.log("\u2705 [DashboardKilometrico] M\xE9tricas kilom\xE9tricas calculadas:",this.metricas)}catch(r){console.error("\u274C [DashboardKilometrico] Error calculando m\xE9tricas:",r)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading m\xE9tricas kilom\xE9tricas:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadMetricasKilometricas:",e)}})}loadEstadisticasPorEstado(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando estad\xEDsticas por estado basadas en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(r=>r.frente_id===this.frenteSeleccionado);try{let r=(yield this.actividadesService.getActividades())||[],c=a.map(s=>u(this,null,function*(){let m=r.filter(h=>h.kilometro===s.kilometro);if(m.length===0)return"pendiente";let g=yield Promise.all(m.map(h=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(h.id)).progreso}catch{return h.progreso_porcentaje||0}}))),v=g.length>0?g.reduce((h,E)=>h+E,0)/g.length:0;return v===0?"pendiente":v>=100?"completado":"en_progreso"})),p=(yield Promise.all(c)).reduce((s,m)=>(s[m]=(s[m]||0)+1,s),{}),y={pendiente:"#ff9800",en_progreso:"#2196f3",completado:"#4caf50",pausado:"#f44336"};this.estadisticasPorEstado=Object.entries(p).map(([s,m])=>({estado:this.getEstadoLabel(s),cantidad:m,porcentaje:Math.round(m/a.length*100),color:y[s]||"#9e9e9e"})),console.log("\u2705 [DashboardKilometrico] Estad\xEDsticas por estado calculadas:",p)}catch(r){console.error("\u274C [DashboardKilometrico] Error calculando estad\xEDsticas:",r)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading estad\xEDsticas por estado:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadEstadisticasPorEstado:",e)}})}loadProgresoKilometrico(){return u(this,null,function*(){try{console.log("\u{1F4CA} [DashboardKilometrico] Cargando progreso kilom\xE9trico con c\xE1lculo basado en tareas"),this.kilometrosService.getKilometros().subscribe({next:e=>u(this,null,function*(){let a=this.frenteSeleccionado==="todos"?e:e.filter(r=>r.frente_id===this.frenteSeleccionado);try{let r=(yield this.actividadesService.getActividades())||[],c=a.map(n=>u(this,null,function*(){let p=r.filter(g=>g.kilometro===n.kilometro),y=this.frentes.find(g=>g.id===n.frente_id),s=0,m="pendiente";if(p.length>0){let g=yield Promise.all(p.map(v=>u(this,null,function*(){try{return(yield this.tareasService.getEstadisticasTareas(v.id)).progreso}catch(h){return console.warn(`No se pudieron obtener tareas para actividad ${v.id}:`,h),v.progreso_porcentaje||0}})));s=g.length>0?Math.round(g.reduce((v,h)=>v+h,0)/g.length):0,s===0?m="pendiente":s>=100?m="completado":m="en_progreso"}return console.log(`\u{1F4CA} [DashboardKilometrico] KM ${n.kilometro}: ${p.length} actividades, progreso: ${s}%, estado: ${m}`),{kilometro:n.kilometro,progreso:s,actividades:p.length,estado:m,frente:y?.nombre||"Sin frente"}}));this.progresoKilometrico=(yield Promise.all(c)).sort((n,p)=>n.kilometro-p.kilometro),console.log("\u2705 [DashboardKilometrico] Progreso kilom\xE9trico calculado:",this.progresoKilometrico)}catch(r){console.error("\u274C [DashboardKilometrico] Error loading actividades:",r)}}),error:e=>{console.error("\u274C [DashboardKilometrico] Error loading progreso kilom\xE9trico:",e)}})}catch(e){console.error("\u274C [DashboardKilometrico] Error in loadProgresoKilometrico:",e)}})}loadTendenciaProgreso(){return u(this,null,function*(){try{let e=[],a=new Date;for(let r=6;r>=0;r--){let c=new Date(a);c.setDate(c.getDate()-r),e.push({fecha:c.toLocaleDateString("es-ES",{month:"short",day:"numeric"}),progreso:Math.round(this.metricas.progresoPromedio-r*2+Math.random()*5)})}this.tendenciaProgreso=e}catch(e){console.error("Error loading tendencia progreso:",e)}})}createCharts(){this.createEstadosChart(),this.createProgresoChart(),this.createTendenciaChart()}createEstadosChart(){let e=document.getElementById("estadosChart");e&&(this.estadosChart=new I(e,{type:"doughnut",data:{labels:this.estadisticasPorEstado.map(a=>a.estado),datasets:[{data:this.estadisticasPorEstado.map(a=>a.cantidad),backgroundColor:this.estadisticasPorEstado.map(a=>a.color),borderWidth:2,borderColor:"#fff"}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"bottom",labels:{padding:20,usePointStyle:!0}}}}}))}createProgresoChart(){let e=document.getElementById("progresoChart");if(!e)return;let a=this.progresoKilometrico.map(r=>r.progreso>=80?"#4caf50":r.progreso>=50?"#2196f3":r.progreso>=20?"#ff9800":"#f44336");this.progresoChart=new I(e,{type:"bar",data:{labels:this.progresoKilometrico.map(r=>`KM ${r.kilometro}`),datasets:[{label:"Progreso (%)",data:this.progresoKilometrico.map(r=>r.progreso),backgroundColor:a,borderColor:a,borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,max:100,ticks:{callback:function(r){return r+"%"}}}},plugins:{legend:{display:!1},tooltip:{callbacks:{afterLabel:r=>{let c=r.dataIndex,n=this.progresoKilometrico[c];return[`Actividades: ${n.actividades}`,`Estado: ${this.getEstadoLabel(n.estado)}`,`Frente: ${n.frente}`]}}}}}})}createTendenciaChart(){let e=document.getElementById("tendenciaChart");e&&(this.tendenciaChart=new I(e,{type:"line",data:{labels:this.tendenciaProgreso.map(a=>a.fecha),datasets:[{label:"Progreso Promedio (%)",data:this.tendenciaProgreso.map(a=>a.progreso),borderColor:"#1976d2",backgroundColor:"rgba(25, 118, 210, 0.1)",borderWidth:3,fill:!0,tension:.4,pointBackgroundColor:"#1976d2",pointBorderColor:"#fff",pointBorderWidth:2,pointRadius:6}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,max:100,ticks:{callback:function(a){return a+"%"}}}},plugins:{legend:{display:!1}}}}))}destroyCharts(){this.estadosChart&&(this.estadosChart.destroy(),this.estadosChart=null),this.progresoChart&&(this.progresoChart.destroy(),this.progresoChart=null),this.tendenciaChart&&(this.tendenciaChart.destroy(),this.tendenciaChart=null)}getEstadoLabel(e){return{pendiente:"Pendiente",en_progreso:"En Progreso",completado:"Completado",pausado:"Pausado"}[e]||e}getEstadoColor(e){return{pendiente:"#ff9800",en_progreso:"#2196f3",completado:"#4caf50",pausado:"#f44336"}[e]||"#9e9e9e"}getProgressColor(e){return e>=80?"primary":e>=50?"accent":(e>=20,"warn")}onFrenteChange(){this.loadDashboardData()}refreshData(){this.loadDashboardData()}exportData(){console.log("Exportando datos kilom\xE9tricos...")}viewKilometroDetails(e){console.log("Ver detalles del kil\xF3metro:",e)}static{this.\u0275fac=function(a){return new(a||d)(F(Le),F(Ae),F(Fe),F($e))}}static{this.\u0275cmp=X({type:d,selectors:[["app-dashboard-kilometrico"]],decls:28,vars:8,consts:[[1,"dashboard-kilometrico-container"],[1,"dashboard-header"],[1,"header-title"],[1,"subtitle"],[1,"header-actions"],["appearance","outline",1,"frente-filter"],[3,"valueChange","selectionChange","value"],["value","todos"],[3,"value",4,"ngFor","ngForOf"],["matSuffix",""],["mat-icon-button","","matTooltip","Actualizar datos",3,"click","disabled"],["mat-raised-button","","color","primary",3,"click","disabled"],["class","loading-container",4,"ngIf"],["class","dashboard-content",4,"ngIf"],[3,"value"],[1,"loading-container"],["mode","indeterminate"],[1,"dashboard-content"],[1,"metrics-grid"],[1,"metric-card","primary"],[1,"metric-icon"],[1,"metric-info"],[1,"metric-value"],[1,"metric-label"],[1,"metric-card","success"],[1,"metric-percentage"],[1,"metric-card","info"],[1,"metric-card","warning"],[1,"map-card"],[1,"map-container"],["id","kilometricMap",1,"kilometric-map"],[1,"map-legend"],[1,"legend-title"],[1,"legend-items"],[1,"legend-item"],[1,"legend-color","completado"],[1,"legend-color","en-progreso"],[1,"legend-color","pendiente"],[1,"progress-card"],[1,"progress-section"],[1,"progress-info"],[1,"progress-value"],[1,"progress-description"],[1,"progress-bar-container"],[1,"main-progress-bar",3,"value","color"],[1,"additional-metrics"],[1,"additional-metric"],[1,"metric-text"],["class","additional-metric",4,"ngIf"],[1,"charts-grid"],[1,"chart-card"],[1,"chart-container"],["id","estadosChart"],[1,"chart-legend"],["class","legend-item",4,"ngFor","ngForOf"],["id","progresoChart"],[1,"chart-card","full-width"],["id","tendenciaChart"],[1,"table-card"],[1,"table-container"],[1,"table-header"],[1,"header-cell"],["class","table-row",4,"ngFor","ngForOf"],["class","empty-table",4,"ngIf"],["class","alerts-card",4,"ngIf"],[1,"warning-icon"],[1,"metric-text","warning"],[1,"legend-color"],[1,"legend-text"],[1,"table-row"],[1,"table-cell"],[1,"km-number"],[1,"frente-name"],[1,"estado-badge"],[1,"progress-cell"],[1,"table-progress",3,"value","color"],[1,"progress-text"],[1,"activities-count"],["mat-icon-button","","matTooltip","Ver detalles",3,"click"],[1,"empty-table"],[1,"empty-subtitle"],[1,"alerts-card"],[1,"alerts-list"],["class","alert-item",4,"ngFor","ngForOf"],[1,"alert-item"],[4,"ngIf"],[1,"alert-icon"],[1,"alert-content"],[1,"alert-title"],[1,"alert-description"],[1,"alert-actions"],["mat-button","","color","primary",3,"click"]],template:function(a,r){a&1&&(i(0,"div",0)(1,"div",1)(2,"div",2)(3,"h2")(4,"mat-icon"),o(5,"straighten"),t(),o(6," Dashboard Kilom\xE9trico "),t(),i(7,"p",3),o(8,"M\xE9tricas y progreso de obras viales por kil\xF3metro"),t()(),i(9,"div",4)(10,"mat-form-field",5)(11,"mat-label"),o(12,"Filtrar por Frente"),t(),i(13,"mat-select",6),ee("valueChange",function(n){return U(r.frenteSeleccionado,n)||(r.frenteSeleccionado=n),n}),w("selectionChange",function(){return r.onFrenteChange()}),i(14,"mat-option",7),o(15,"Todos los Frentes"),t(),S(16,Be,2,2,"mat-option",8),t(),i(17,"mat-icon",9),o(18,"filter_list"),t()(),i(19,"button",10),w("click",function(){return r.refreshData()}),i(20,"mat-icon"),o(21,"refresh"),t()(),i(22,"button",11),w("click",function(){return r.exportData()}),i(23,"mat-icon"),o(24,"download"),t(),o(25," Exportar "),t()()(),S(26,Ve,4,0,"div",12)(27,Ze,166,27,"div",13),t()),a&2&&(l(13),Q("value",r.frenteSeleccionado),l(3),f("ngForOf",r.frentes),l(3),f("disabled",r.isLoading),l(),Y("spinning",r.isLoading),l(2),f("disabled",r.isLoading),l(4),f("ngIf",r.isLoading),l(),f("ngIf",!r.isLoading))},dependencies:[re,te,ie,oe,me,ne,le,ce,de,se,xe,ve,fe,_e,be,Se,Ee,Ce,ye,Ke,Pe,ke,Me,Oe,he,pe,ge,Te,Ie,ue,ae],styles:[".map-card[_ngcontent-%COMP%]{margin-bottom:24px}.map-container[_ngcontent-%COMP%]{position:relative;display:flex;gap:16px}.kilometric-map[_ngcontent-%COMP%]{flex:1;height:400px;border:1px solid #e0e0e0;border-radius:8px;background:#f5f5f5;position:relative;overflow:hidden}.map-legend[_ngcontent-%COMP%]{min-width:200px;padding:16px;background:#fafafa;border-radius:8px;border:1px solid #e0e0e0}.legend-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;font-weight:600;margin-bottom:16px;color:#333}.legend-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.legend-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;font-size:14px}.legend-color[_ngcontent-%COMP%]{width:20px;height:20px;border-radius:4px;border:2px solid #fff;box-shadow:0 1px 3px #0003}.legend-color.completado[_ngcontent-%COMP%]{background-color:#4caf50}.legend-color.en-progreso[_ngcontent-%COMP%]{background-color:#2196f3}.legend-color.pendiente[_ngcontent-%COMP%]{background-color:#ff9800}.km-segment[_ngcontent-%COMP%]{position:absolute;height:20px;border-radius:10px;cursor:pointer;transition:all .3s ease;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:600;font-size:12px;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.km-segment[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 8px #0000004d}.km-segment.completado[_ngcontent-%COMP%]{background:linear-gradient(135deg,#4caf50,#66bb6a)}.km-segment.en-progreso[_ngcontent-%COMP%]{background:linear-gradient(135deg,#2196f3,#42a5f5)}.km-segment.pendiente[_ngcontent-%COMP%]{background:linear-gradient(135deg,#ff9800,#ffb74d)}.km-tooltip[_ngcontent-%COMP%]{position:absolute;background:#000c;color:#fff;padding:8px 12px;border-radius:4px;font-size:12px;pointer-events:none;z-index:1000;white-space:nowrap}@media (max-width: 768px){.map-container[_ngcontent-%COMP%]{flex-direction:column}.map-legend[_ngcontent-%COMP%]{min-width:unset}.legend-items[_ngcontent-%COMP%]{flex-direction:row;flex-wrap:wrap}}"]})}}return d})();export{kt as DashboardKilometricoComponent};
