import{a as E}from"./chunk-GOBT7UBB.js";import{a as S}from"./chunk-WFXXN3GR.js";import{Z as w,ba as _,f as U,g as v,ga as m}from"./chunk-B6672ACT.js";import{a as f,b as p,i as s}from"./chunk-ODN5LVDJ.js";var j=(()=>{class g{constructor(r,e){this.supabase=r,this.directAuthService=e,this.actividadesSubject=new v([]),this.actividades$=this.actividadesSubject.asObservable().pipe(w(a=>{})),this.frentesSubject=new v([]),this.frentes$=this.frentesSubject.asObservable().pipe(w(a=>{})),this.progresoUpdatedSubject=new U,this.progresoUpdated$=this.progresoUpdatedSubject.asObservable(),this.actividadesChannel=null,this.frentesChannel=null,this.directAuthService.getCurrentUser()&&(this.loadUserActividades().catch(a=>{}),this.loadUserFrente().catch(a=>{}),this.setupRealtimeSubscriptions())}ngOnDestroy(){this.cleanupRealtimeSubscriptions()}setupRealtimeSubscriptions(){this.cleanupRealtimeSubscriptions(),this.directAuthService.getCurrentUser()&&(this.actividadesChannel=this.supabase.client.channel("actividades-changes").on("postgres_changes",{event:"*",schema:"public",table:"actividades"},e=>{this.handleActividadChange(e)}).subscribe(),this.frentesChannel=this.supabase.client.channel("frentes-changes").on("postgres_changes",{event:"*",schema:"public",table:"frentes"},e=>{this.handleFrenteChange(e)}).subscribe())}cleanupRealtimeSubscriptions(){this.actividadesChannel&&(this.supabase.client.removeChannel(this.actividadesChannel),this.actividadesChannel=null),this.frentesChannel&&(this.supabase.client.removeChannel(this.frentesChannel),this.frentesChannel=null)}handleActividadChange(r){return s(this,null,function*(){let e=this.directAuthService.getCurrentUser();if(!e)return;(yield this.isActividadRelevantForUser(r,e.id))&&(yield this.loadUserActividades())})}handleFrenteChange(r){return s(this,null,function*(){let e=this.directAuthService.getCurrentUser();if(!e)return;(yield this.isFrenteRelevantForUser(r,e.id))&&(yield this.loadUserFrente())})}isActividadRelevantForUser(r,e){return s(this,null,function*(){try{return!!(r.new||r.old)}catch{return!1}})}isFrenteRelevantForUser(r,e){return s(this,null,function*(){try{return!!(r.new||r.old)}catch{return!1}})}loadUserActividades(){return s(this,null,function*(){try{if(!this.directAuthService.getCurrentUser())return;let e,t,a=yield this.supabase.client.from("actividades").select("*").limit(10),i=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*),
          responsable_usuario:users!actividades_user_id_fkey(id, nombre, email)
        `).order("created_at",{ascending:!1});if(a.data&&a.data.length>0&&(!i.data||i.data.length===0)?(e=a.data,t=a.error):(e=i.data,t=i.error),t)throw t;e&&e.length>0,this.actividadesSubject.next(e||[]);let c=this.actividadesSubject.value}catch{}})}reloadUserFrente(){return s(this,null,function*(){yield this.loadUserFrente()})}loadUserFrente(){return s(this,null,function*(){try{if(!this.directAuthService.getCurrentUser())return;let{data:e,error:t}=yield this.supabase.client.from("frentes").select("*").eq("estado","activo").order("nombre");if(t)throw t;this.frentesSubject.next(e||[])}catch{}})}createActividad(r){return s(this,null,function*(){try{console.log("\u{1F680} ActividadesService.createActividad() iniciado"),console.log("\u{1F4CA} Datos de actividad a crear:",{obraId:r.obra_id,frenteId:r.frente_id,fecha:r.fecha,tipoActividad:r.tipo_actividad}),console.log("\u{1F50D} Verificando autenticaci\xF3n antes de crear actividad...");let e=this.directAuthService.getCurrentUser();if(console.log("\u{1F464} Usuario obtenido:",{hasUser:!!e,userId:e?.id||"null",userEmail:e?.email||"null"}),!e)throw console.error("\u274C Error: Usuario no autenticado en createActividad"),console.log("\u{1F50D} Estado del DirectAuthService:",{isAuthenticated:this.directAuthService.isAuthenticated(),hasToken:!!sessionStorage.getItem("direct_auth_token"),hasStoredUser:!!sessionStorage.getItem("direct_auth_user")}),new Error("Usuario no autenticado");console.log("\u2705 Usuario autenticado, procediendo con la creaci\xF3n...");let t=p(f({},r),{user_id:e.id,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),{data:a,error:i}=yield this.supabase.client.from("actividades").insert([t]).select(`
          *,
          frente:frentes(*)
        `).single();if(i)throw i;return yield this.loadUserActividades(),a}catch(e){throw e}})}updateActividad(r,e){return s(this,null,function*(){try{let t=p(f({},e),{updated_at:new Date().toISOString()}),{data:a,error:i}=yield this.supabase.client.from("actividades").update(t).eq("id",r).select(`
          *,
          frente:frentes(*)
        `).single();if(i)throw i;return yield this.loadUserActividades(),a}catch(t){throw t}})}deleteActividad(r){return s(this,null,function*(){try{if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(r))throw new Error(`ID no es un UUID v\xE1lido: ${r}`);let{error:t}=yield this.supabase.client.from("actividades").delete().eq("id",r);if(t)throw t;yield this.loadUserActividades()}catch(e){throw e}})}getActividadById(r){return s(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).eq("id",r).single();if(t)throw t;return e}catch{return null}})}addEvidencia(r){return s(this,null,function*(){try{let e=p(f({},r),{created_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("evidencias").insert([e]).select().single();if(a)throw a;return yield this.loadUserActividades(),t}catch(e){throw e}})}addRecurso(r){return s(this,null,function*(){try{let e=p(f({},r),{created_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("recursos").insert([e]).select().single();if(a)throw a;return yield this.loadUserActividades(),t}catch(e){throw e}})}getActividadesByFrente(r){return s(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*)
        `).eq("frente_id",r).order("created_at",{ascending:!1});if(t)throw t;return e||[]}catch{return[]}})}getActividades(){return s(this,null,function*(){try{let r=this.directAuthService.getCurrentUser();if(!r)return[];let{data:e,error:t}=yield this.supabase.client.from("actividades").select(`
          *,
          frente:frentes(*),
          evidencias(*),
          recursos(*),
          responsable_usuario:users!actividades_user_id_fkey(id, nombre, email)
        `).eq("user_id",r.id).order("created_at",{ascending:!1});if(t)throw t;return e&&e.length>0,e||[]}catch{return[]}})}getActividadesStats(){return s(this,null,function*(){try{let r=yield this.directAuthService.getCurrentUser();if(!r)return null;let{data:e,error:t}=yield this.supabase.client.from("actividades").select("estado").eq("user_id",r.id);if(t)throw t;return{total:e?.length||0,programado:e?.filter(i=>i.estado==="programado").length||0,ejecucion:e?.filter(i=>i.estado==="ejecucion").length||0,finalizado:e?.filter(i=>i.estado==="finalizado").length||0}}catch{return null}})}createTarea(r){return s(this,null,function*(){try{let e=p(f({},r),{created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),{data:t,error:a}=yield this.supabase.client.from("tareas").insert([e]).select().single();if(a)throw a;return t}catch(e){throw e}})}getTareasByActividad(r){return s(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("tareas").select("*").eq("actividad_id",r).order("orden",{ascending:!0});if(t)throw t;return e||[]}catch(e){throw e}})}calcularProgresoActividad(r){return s(this,null,function*(){try{let e=yield this.getTareasByActividad(r);if(e.length===0)return 0;let t=e.filter(i=>i.completada).length;return Math.round(t/e.length*100)}catch{return 0}})}updateActividadEstadoAutomatico(r){return s(this,null,function*(){try{console.log(`[DEBUG] Iniciando actualizaci\xF3n autom\xE1tica de estado para actividad: ${r}`);let{data:e,error:t}=yield this.supabase.client.from("tareas").select("id, completada").eq("actividad_id",r);if(t)throw console.error("[DEBUG] Error obteniendo tareas:",t),t;if(!e||e.length===0){console.log("[DEBUG] No hay tareas para esta actividad");return}let a=e.length,i=e.filter(d=>d.completada).length,c=Math.round(i/a*100);console.log(`[DEBUG] Estad\xEDsticas - Total: ${a}, Completadas: ${i}, Progreso: ${c}%`);let o;i===0?o="programado":i===a?o="finalizado":o="ejecucion",console.log(`[DEBUG] Nuevo estado calculado: ${o}`);let{data:n,error:u}=yield this.supabase.client.from("actividades").select("estado, kilometro, frente_id, progreso_porcentaje").eq("id",r).single();if(u)throw console.error("[DEBUG] Error obteniendo actividad:",u),u;let h=n?.estado||"programado";if(console.log(`[DEBUG] Estado actual: ${h}`),h!==o||n?.progreso_porcentaje!==c){console.log(`[DEBUG] Actualizando estado de ${h} a ${o} y progreso a ${c}%`);let{error:d}=yield this.supabase.client.from("actividades").update({estado:o,progreso_porcentaje:c,updated_at:new Date().toISOString()}).eq("id",r);if(d)throw console.error("[DEBUG] Error actualizando estado:",d),d;console.log(`[DEBUG] Estado actualizado exitosamente a: ${o}`),this.progresoUpdatedSubject.next({actividadId:r,progreso:c}),yield this.loadUserActividades()}else console.log("[DEBUG] El estado no necesita cambios");n?.kilometro&&n?.frente_id&&(yield this.updateKilometroEstadoFromActividades(n.frente_id,n.kilometro))}catch(e){throw console.error("[DEBUG] Error en updateActividadEstadoAutomatico:",e),e}})}updateKilometroEstadoFromActividades(r,e){return s(this,null,function*(){try{console.log(`[DEBUG] Actualizando estado de kil\xF3metro ${e} en frente ${r}`);let{data:t,error:a}=yield this.supabase.client.from("actividades").select("id, estado, progreso_porcentaje").eq("frente_id",r).eq("kilometro",e);if(a){console.error("[DEBUG] Error obteniendo actividades del kil\xF3metro:",a);return}if(!t||t.length===0){console.log("[DEBUG] No hay actividades en este kil\xF3metro");return}let i=t.reduce((l,y)=>l+(y.progreso_porcentaje||0),0),c=Math.round(i/t.length),o,n,u=t.filter(l=>l.estado==="finalizado").length,h=t.filter(l=>l.estado==="ejecucion").length;u===t.length?(o="completado",n="#4CAF50"):h>0||u>0?(o="en_progreso",n="#2196F3"):(o="no_iniciado",n="#9E9E9E"),console.log(`[DEBUG] Kil\xF3metro ${e} - Estado: ${o}, Progreso: ${c}%, Color: ${n}`);let{data:d,error:b}=yield this.supabase.client.from("kilometros").select("id, estado, progreso_porcentaje").eq("frente_id",r).eq("kilometro",e).single();if(b){console.error("[DEBUG] Error obteniendo kil\xF3metro:",b);return}if(!d){console.log("[DEBUG] Kil\xF3metro no encontrado en la base de datos");return}if(d.estado!==o||d.progreso_porcentaje!==c){let{error:l}=yield this.supabase.client.from("kilometros").update({estado:o,progreso_porcentaje:c,color:n,actividades_count:t.length,fecha_ultima_actualizacion:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("id",d.id);l?console.error("[DEBUG] Error actualizando kil\xF3metro:",l):console.log(`[DEBUG] Kil\xF3metro ${e} actualizado exitosamente`)}else console.log(`[DEBUG] Kil\xF3metro ${e} no necesita actualizaci\xF3n`)}catch(t){console.error("[DEBUG] Error en updateKilometroEstadoFromActividades:",t)}})}updateTareaEstado(r,e){return s(this,null,function*(){try{console.log(`[DEBUG] Actualizando tarea ${r} a completada: ${e}`);let{data:t,error:a}=yield this.supabase.client.from("tareas").select("actividad_id").eq("id",r).single();if(a)throw console.error("[DEBUG] Error obteniendo tarea:",a),a;let i={completada:e,updated_at:new Date().toISOString()};e?i.fecha_completado=new Date().toISOString():i.fecha_completado=null;let{data:c,error:o}=yield this.supabase.client.from("tareas").update(i).eq("id",r).select().single();if(o)throw console.error("[DEBUG] Error actualizando tarea:",o),o;console.log("[DEBUG] Tarea actualizada exitosamente");let n=yield this.calcularProgresoActividad(t.actividad_id);return this.progresoUpdatedSubject.next({actividadId:t.actividad_id,progreso:n}),yield this.updateActividadEstadoAutomatico(t.actividad_id),console.log("[DEBUG] Proceso completo de actualizaci\xF3n de tarea finalizado"),c}catch(t){throw console.error("[DEBUG] Error en updateTareaEstado:",t),t}})}createFrente(r){return s(this,null,function*(){try{if(!this.directAuthService.getCurrentUser())throw new Error("Usuario no autenticado");let t=p(f({},r),{created_at:new Date().toISOString()}),{data:a,error:i}=yield this.supabase.client.from("frentes").insert([t]).select().single();if(i)throw i;return yield this.loadUserFrente(),a}catch(e){throw e}})}updateFrente(r,e){return s(this,null,function*(){try{let{data:t,error:a}=yield this.supabase.client.from("frentes").update(e).eq("id",r).select().single();if(a)throw a;return yield this.loadUserFrente(),t}catch(t){throw t}})}updateFrenteLocation(r,e,t){return s(this,null,function*(){try{let{data:a,error:i}=yield this.supabase.client.from("frentes").update({ubicacion_lat:e,ubicacion_lng:t}).eq("id",r).select().single();if(i)throw i;return yield this.loadUserFrente(),a}catch(a){throw a}})}deleteFrente(r){return s(this,null,function*(){try{let{error:e}=yield this.supabase.client.from("frentes").delete().eq("id",r);if(e)throw e;yield this.loadUserFrente()}catch(e){throw e}})}getFrenteById(r){return s(this,null,function*(){try{let{data:e,error:t}=yield this.supabase.client.from("frentes").select("*").eq("id",r).single();if(t)throw t;return e}catch{return null}})}debugUserData(){return s(this,null,function*(){try{let r=this.directAuthService.getCurrentUser(),e=this.directAuthService.getCurrentProfile();if(!r)return;let{data:t,error:a}=yield this.supabase.client.from("user_obras").select("*").eq("user_id",r.id),{data:i,error:c}=yield this.supabase.client.from("actividades").select("id, tipo_actividad, obra_id, user_id, created_at, estado").order("created_at",{ascending:!1}).limit(10);if(t&&t.length>0){let o=t.map(h=>h.obra_id),{data:n,error:u}=yield this.supabase.client.from("actividades").select("id, tipo_actividad, obra_id, user_id, created_at, estado").in("obra_id",o).order("created_at",{ascending:!1})}}catch{}})}getUserObras(){return s(this,null,function*(){try{let r=this.directAuthService.getCurrentUser();if(!r)throw new Error("Usuario no autenticado");let{data:e,error:t}=yield this.supabase.client.from("user_obras").select(`
          obra_id,
          obras(*)
        `).eq("user_id",r.id);if(t)throw t;return e?.map(i=>i.obras)||[]}catch{return[]}})}refresh(){return s(this,null,function*(){yield Promise.all([this.loadUserActividades(),this.loadUserFrente()])})}static{this.\u0275fac=function(e){return new(e||g)(m(S),m(E))}}static{this.\u0275prov=_({token:g,factory:g.\u0275fac,providedIn:"root"})}}return g})();export{j as a};
